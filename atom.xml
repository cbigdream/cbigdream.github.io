<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>九住</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://channelsray.github.io/"/>
  <updated>2020-01-28T11:56:49.011Z</updated>
  <id>https://channelsray.github.io/</id>
  
  <author>
    <name>channelsray</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>VSCode插件提升hexo体验</title>
    <link href="https://channelsray.github.io/2019/05/23/VSCode%E6%8F%92%E4%BB%B6%E6%8F%90%E5%8D%87hexo%E4%BD%93%E9%AA%8C/"/>
    <id>https://channelsray.github.io/2019/05/23/VSCode插件提升hexo体验/</id>
    <published>2019-05-23T07:19:07.000Z</published>
    <updated>2020-01-28T11:56:49.011Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo的编写与部署可以通过vscode进行，同时通过对插件的使用也可以增强体验，提升效率</p><a id="more"></a><h2 id="1-图片剪切插件-Paste-Image"><a href="#1-图片剪切插件-Paste-Image" class="headerlink" title="1. 图片剪切插件 Paste Image"></a>1. 图片剪切插件 <a href="https://marketplace.visualstudio.com/items?itemName=mushan.vscode-paste-image" target="_blank" rel="noopener">Paste Image</a></h2><p>hexo3.0版本中可以在_config.yml中设置</p><pre><code>post_asset_folder: true</code></pre><p>这样在hexo new 的时候会生成同名的文件夹，同时在md文件中输入</p><pre><code>{% asset_img xxx %}</code></pre><p>就可以插入这个文件夹中的图片。为了方便进行这个步骤，使用vscode中的插件Paste Image，安装之后，在user-settings里新增两条配置：</p><pre><code>&quot;pasteImage.path&quot;: &quot;${currentFileNameWithoutExt}/&quot;,&quot;pasteImage.insertPattern&quot;: &quot;{% asset_img ${imageFilePath} %}&quot;</code></pre><p>这样粘贴图片的时候会自动保存到文件夹中，并自动引用。注意这个插件只适合与剪切板使用，直接拖拽文件是不管用的。</p><h2 id="2-markdown预览插件-Markdown-Preview-Enhanced"><a href="#2-markdown预览插件-Markdown-Preview-Enhanced" class="headerlink" title="2. markdown预览插件 Markdown Preview Enhanced"></a>2. markdown预览插件 <a href="https://marketplace.visualstudio.com/items?itemName=shd101wyy.markdown-preview-enhanced" target="_blank" rel="noopener">Markdown Preview Enhanced</a></h2><p>利用该插件预览</p><pre><code>{% asset_img xxx %}</code></pre><p>形式插入的图片，主要分为两步</p><h5 id="1-ctrl-shift-P-找到-Markdown-Preview-Enhanced-Extend-Parser，打开parser-js"><a href="#1-ctrl-shift-P-找到-Markdown-Preview-Enhanced-Extend-Parser，打开parser-js" class="headerlink" title="1. ctrl+shift+P 找到 Markdown Preview Enhanced: Extend Parser，打开parser.js"></a>1. ctrl+shift+P 找到 Markdown Preview Enhanced: Extend Parser，打开parser.js</h5><h5 id="2-修改其中onWillParseMarkdown方法为："><a href="#2-修改其中onWillParseMarkdown方法为：" class="headerlink" title="2. 修改其中onWillParseMarkdown方法为："></a>2. 修改其中onWillParseMarkdown方法为：</h5><pre><code class="javascript">onWillParseMarkdown: function(markdown) {  return new Promise((resolve, reject)=&gt; {    markdown = markdown.replace(      /\{%\s*asset_img\s*(.*)\s*%\}/g,      (whole, content) =&gt; (`![](${content})`)    )    return resolve(markdown)  })},</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hexo的编写与部署可以通过vscode进行，同时通过对插件的使用也可以增强体验，提升效率&lt;/p&gt;
    
    </summary>
    
      <category term="静态博客" scheme="https://channelsray.github.io/categories/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="hexo" scheme="https://channelsray.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat启动时卡住不动</title>
    <link href="https://channelsray.github.io/2019/05/23/Tomcat%E5%90%AF%E5%8A%A8%E6%97%B6%E5%8D%A1%E4%BD%8F/"/>
    <id>https://channelsray.github.io/2019/05/23/Tomcat启动时卡住/</id>
    <published>2019-05-23T06:49:32.000Z</published>
    <updated>2020-01-28T04:22:32.709Z</updated>
    
    <content type="html"><![CDATA[<p>tomcat启动以后卡在INFO: Deploying web application directory …</p><a id="more"></a><p>在weblogic的官方文档中 Monitoring and Troubleshooting 标题为 <a href="https://docs.oracle.com/cd/E13209_01/wlcp/wlss30/configwlss/jvmrand.html" target="_blank" rel="noopener">Avoiding JVM Delays Caused By Random Number Generation</a> 的文档</p><p>The library used for random number generation in Sun’s JVM relies on /dev/random by default for UNIX platforms. This can potentially block the WebLogic SIP Server process because on some operating systems /dev/random waits for a certain amount of “noise” to be generated on the host machine before returning a result. Although /dev/random is more secure, BEA recommends using /dev/urandom if the default JVM configuration delays WebLogic SIP Server startup.</p><p>To determine if your operating system exhibits this behavior, try displaying a portion of the file from a shell prompt:</p><p>head -n 1 /dev/random</p><p>If the command returns immediately, you can use /dev/random as the default generator for SUN’s JVM. If the command does not return immediately, use these steps to configure the JVM to use /dev/urandom:</p><pre><code>Open the $JAVA_HOME/jre/lib/security/java.security file in a text editor.Change the line:  securerandom.source=file:/dev/randomto read:  securerandom.source=file:/dev/./urandomSave your change and exit the text editor.</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;tomcat启动以后卡在INFO: Deploying web application directory …&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="https://channelsray.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="linux" scheme="https://channelsray.github.io/tags/linux/"/>
    
      <category term="tomcat" scheme="https://channelsray.github.io/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>Linux配置tomcat自动启动</title>
    <link href="https://channelsray.github.io/2019/05/22/Linux%E9%85%8D%E7%BD%AEtomcat%E8%87%AA%E5%8A%A8%E5%90%AF%E5%8A%A8/"/>
    <id>https://channelsray.github.io/2019/05/22/Linux配置tomcat自动启动/</id>
    <published>2019-05-22T13:15:00.000Z</published>
    <updated>2020-01-28T04:53:03.480Z</updated>
    
    <content type="html"><![CDATA[<p>将tomcat配置成linux service，跟随linux启动</p><a id="more"></a> <h2 id="1-编辑tomcat-bin-catalina-sh"><a href="#1-编辑tomcat-bin-catalina-sh" class="headerlink" title="1. 编辑tomcat/bin/catalina.sh"></a>1. 编辑tomcat/bin/catalina.sh</h2><p>在catalina.sh中添加java和tomcat环境变量</p><pre><code class="shell">CATALINA_HOME=/usr/local/tomcatJAVA_HOME=/usr/lib/java/jdk1.7.0_79</code></pre><p>根据实际情况配置环境变量，然后将catalina.sh复制到/etc/init.d/目录下</p><pre><code class="shell">cp tomcat/bin/catalina.sh /etc/init.d/tomcat</code></pre><h2 id="2-更新tomcat-service，并启动："><a href="#2-更新tomcat-service，并启动：" class="headerlink" title="2. 更新tomcat service，并启动："></a>2. 更新tomcat service，并启动：</h2><pre><code class="shell">update-rc.d tomcat defaultsservice tomcat start</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;将tomcat配置成linux service，跟随linux启动&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="https://channelsray.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="linux" scheme="https://channelsray.github.io/tags/linux/"/>
    
      <category term="tomcat" scheme="https://channelsray.github.io/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>vsftpd安装与配置</title>
    <link href="https://channelsray.github.io/2019/05/22/vsftpd%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    <id>https://channelsray.github.io/2019/05/22/vsftpd安装与配置/</id>
    <published>2019-05-22T08:18:06.000Z</published>
    <updated>2020-01-28T11:58:42.936Z</updated>
    
    <content type="html"><![CDATA[<p>vsftpd 是“very secure FTP daemon”的缩写，安全性是它的一个最大的特点。vsftpd 是一个 UNIX 类操作系统上运行的服务器的名字，它可以运行在诸如 Linux、BSD、Solaris、 HP-UNIX等系统上面，是一个完全免费的、开放源代码的ftp服务器软件，支持很多其他的 FTP 服务器所不支持的特征。比如：非常高的安全性需求、带宽限制、良好的可伸缩性、可创建虚拟用户、支持IPv6、速率高等。</p><a id="more"></a> <h2 id="1-安装vsftpd"><a href="#1-安装vsftpd" class="headerlink" title="1. 安装vsftpd"></a>1. 安装vsftpd</h2><p>对于ubuntu系统可以很容易的通过apt-get来安装vsftpd</p><pre><code>sudo apt-get install vsftpd</code></pre><p>其配置文件在</p><pre><code>/etc/vsftpd.conf</code></pre><p>根据实际环境需要修改配置文件：</p><pre><code>#log_ftp_protocol=YESlisten=YESlisten_port=3001 # ftp登陆端口ftp_data_port=3000 # 主动模式数据端口port_enable=YESport_promiscuous=YESpasv_enable=YESpasv_address=  # 此处填被动模式所需的外网IPpasv_addr_resolve=yespasv_promiscuous=YESdelete_failed_uploads=YES#listen_ipv6=YES# Allow anonymous FTP? (Disabled by default)anonymous_enable=NO# Uncomment this to allow local users to log in.local_enable=YES# Uncomment this to enable any form of FTP write command.write_enable=YES# Default umask for local users is 077. You may wish to change this to 022,# if your users expect that (022 is used by most other ftpd&#39;s)local_umask=022#file_open_mode=0755#pasv_enable=NO# Uncomment this to allow the anonymous FTP user to upload files. This only# has an effect if the above global write enable is activated. Also, you will# obviously need to create a directory writable by the FTP user.anon_upload_enable=NO# Uncomment this if you want the anonymous FTP user to be able to create# new directories.anon_mkdir_write_enable=NO# Activate directory messages - messages given to remote users when they# go into a certain directory.dirmessage_enable=YES# If enabled, vsftpd will display directory listings with the time# in  your  local  time  zone.  The default is to display GMT. The# times returned by the MDTM FTP command are also affected by this# option.#use_localtime=YESsyslog_enable=YES# Activate logging of uploads/downloads.xferlog_enable=YES# Make sure PORT transfer connections originate from port 20 (ftp-data).connect_from_port_20=YES# If you want, you can arrange for uploaded anonymous files to be owned by# a different user. Note! Using &quot;root&quot; for uploaded files is not# recommended!#chown_uploads=YES#chown_username=whoever# You may override where the log file goes if you like. The default is shown# below.xferlog_file=/var/log/xferlog.log# If you want, you can have your log file in standard ftpd xferlog format.# Note that the default log file location is /var/log/xferlog in this case.xferlog_std_format=YESdual_log_enable=YESvsftpd_log_file=/var/log/vsftpd.log# You may change the default value for timing out an idle session.#idle_session_timeout=600# You may change the default value for timing out a data connection.#data_connection_timeout=120  # 数据连接超时# It is recommended that you define on your system a unique user which the# ftp server can use as a totally isolated and unprivileged user.#nopriv_user=ftpsecure# Enable this and the server will recognise asynchronous ABOR requests. Not# recommended for security (the code is non-trivial). Not enabling it,# however, may confuse older FTP clients.#async_abor_enable=YES# By default the server will pretend to allow ASCII mode but in fact ignore# the request. Turn on the below options to have the server actually do ASCII# mangling on files when in ASCII mode.# Beware that on some FTP servers, ASCII support allows a denial of service# attack (DoS) via the command &quot;SIZE /big/file&quot; in ASCII mode. vsftpd# predicted this attack and has always been safe, reporting the size of the# raw file.# ASCII mangling is a horrible feature of the protocol.ascii_upload_enable=YESascii_download_enable=YES# You may fully customise the login banner string:#ftpd_banner=Welcome to blah FTP service.# You may specify a file of disallowed anonymous e-mail addresses. Apparently# useful for combatting certain DoS attacks.#deny_email_enable=YES# (default follows)#banned_email_file=/etc/vsftpd.banned_emails# You may restrict local users to their home directories.  See the FAQ for# the possible risks in this before using chroot_local_user or# chroot_list_enable below.#chroot_local_user=YES# You may specify an explicit list of local users to chroot() to their home# directory. If chroot_local_user is YES, then this list becomes a list of# users to NOT chroot().# (Warning! chroot&#39;ing can be very dangerous. If using chroot, make sure that# the user does not have write access to the top level directory within the# chroot)chroot_local_user=YESallow_writeable_chroot=YESchroot_list_enable=YES # (default follows)chroot_list_file=/etc/vsftpd.chroot_list #chroot_list_enable=YES chroot_local_user=YES#1.所有用户都被限制在其主目录下 2.使用chroot_list_file指定的用户列表，这些用户作为“例外”，不受限制#chroot_list_enable=YES chroot_local_user=NO#1.所有用户都不被限制其主目录下 2.使用chroot_list_file指定的用户列表，这些用户作为“例外”，受到限制#chroot_list_enable=NO chroot_local_user=YES#1.所有用户都被限制在其主目录下 2.不使用chroot_list_file指定的用户列表，没有任何“例外”用户#chroot_list_enable=NO chroot_local_user=NO#1.所有用户都不被限制其主目录下 2.不使用chroot_list_file指定的用户列表，没有任何“例外”用户# You may activate the &quot;-R&quot; option to the builtin ls. This is disabled by# default to avoid remote users being able to cause excessive I/O on large# sites. However, some broken FTP clients such as &quot;ncftp&quot; and &quot;mirror&quot; assume# the presence of the &quot;-R&quot; option, so there is a strong case for enabling it.#ls_recurse_enable=YES# This option should be the name of a directory which is empty.  Also, the# directory should not be writable by the ftp user. This directory is used# as a secure chroot() jail at times vsftpd does not require filesystem# access.secure_chroot_dir=/var/run/vsftpd/empty# This string is the name of the PAM service vsftpd will use.pam_service_name=vsftpd# This option specifies the location of the RSA certificate to use for SSL# encrypted connections.#rsa_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem# This option specifies the location of the RSA key to use for SSL# encrypted connections.#local_root=/home/uftp#rsa_private_key_file=/etc/ssl/private/ssl-cert-snakeoil.keyuserlist_deny=NOuserlist_enable=YESuserlist_file=/etc/allowed_users # 当且仅当userlist_enable=YES时：userlist_deny项的配置才有效，user_list文件才会被使用；当其为NO时，无论userlist_deny项为何值都是无效的，本地全体用户（除去ftpusers中的用户）都可以登入FTP# 当userlist_enable=YES时，userlist_deny=YES时：user_list是一个黑名单，即：所有出现在名单中的用户都会被拒绝登入；# 当userlist_enable=YES时，userlist_deny=NO时：user_list是一个白名单，即：只有出现在名单中的用户才会被准许登入(user_list之外的用户都被拒绝登入)；另外需要特别提醒的是：使用白名单后，匿名用户将无法登入！除非显式在user_list中加入一行：anonymousseccomp_sandbox=NO# ssl configssl_enable=YESallow_anon_ssl=NOforce_local_data_ssl=NOforce_local_logins_ssl=NOforce_anon_logins_ssl=NOforce_anon_data_ssl=NOssl_tlsv1=YESssl_sslv2=YESssl_sslv3=YESrequire_ssl_reuse=NOdebug_ssl=YESstrict_ssl_read_eof=YESstrict_ssl_write_shutdown=YESssl_ciphers=HIGHrsa_cert_file=/etc/ssl/certs/vsftpd.pemrsa_private_key_file=/etc/ssl/certs/vsftpd.pempasv_max_port=31000pasv_min_port=30000data_connection_timeout=8</code></pre><p>/etc/vsftpd.chroot_list 中加入root用户作为例外，可以不被限制在主目录下<br>/etc/allow_users 中加入允许登陆的用户</p><h2 id="2-创建用户"><a href="#2-创建用户" class="headerlink" title="2. 创建用户"></a>2. 创建用户</h2><pre><code class="shell">useradd -d /home/temp temppasswd tempusermod -s /usr/sbin/nologin temp</code></pre><p>添加用户temp，用户根目录/home/temp，设置密码，设置权限为/usr/sbin/nologin,禁止登陆，此处需要注意不同系统nologin的目录不同。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;vsftpd 是“very secure FTP daemon”的缩写，安全性是它的一个最大的特点。vsftpd 是一个 UNIX 类操作系统上运行的服务器的名字，它可以运行在诸如 Linux、BSD、Solaris、 HP-UNIX等系统上面，是一个完全免费的、开放源代码的ftp服务器软件，支持很多其他的 FTP 服务器所不支持的特征。比如：非常高的安全性需求、带宽限制、良好的可伸缩性、可创建虚拟用户、支持IPv6、速率高等。&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="https://channelsray.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="linux" scheme="https://channelsray.github.io/tags/linux/"/>
    
      <category term="vsftpd" scheme="https://channelsray.github.io/tags/vsftpd/"/>
    
  </entry>
  
</feed>
