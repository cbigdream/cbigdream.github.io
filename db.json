{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/nexmoe/source/favicon.ico","path":"favicon.ico","modified":0,"renderable":1},{"_id":"themes/nexmoe/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/nexmoe/source/images/avatar.png","path":"images/avatar.png","modified":0,"renderable":1},{"_id":"themes/nexmoe/source/js/app.js","path":"js/app.js","modified":0,"renderable":1}],"Cache":[{"_id":"themes/nexmoe/.gitignore","hash":"c533ce8eff57dd7954dab03bac3bf9546e00b050","modified":1580181349850},{"_id":"themes/nexmoe/CODE_OF_CONDUCT.md","hash":"71e211684f8840845f3d6491922e43778da8b829","modified":1580180770905},{"_id":"themes/nexmoe/LICENSE","hash":"b314c7ebb7d599944981908b7f3ed33a30e78f3a","modified":1580180770906},{"_id":"themes/nexmoe/README.md","hash":"97de2fb49653cb6e784433f61e2ed78000358985","modified":1580180770906},{"_id":"themes/nexmoe/_config.example.yml","hash":"671c4f00b0baa5e4b9682c91c5a78bb7dee21d87","modified":1580180770941},{"_id":"themes/nexmoe/_config.yml","hash":"c1cd4fb70fd666f5d9d688dbd3cc6fa4e5ee700d","modified":1580216013503},{"_id":"themes/nexmoe/font.php","hash":"3e2674934094417aa94beac3ddca37e14a8a4e65","modified":1580180770945},{"_id":"source/_posts/Linux配置tomcat自动启动.md","hash":"8e8e4682eae13b34812d5f91c7d2f63ce1b324d4","modified":1580187183480},{"_id":"source/_posts/VSCode插件提升hexo体验.md","hash":"87eb28b69ccdcb0157bcfee25a79bdf0264aaa09","modified":1580212609011},{"_id":"source/_posts/Tomcat启动时卡住.md","hash":"e0fe665aa0aea3c9a867554d1c5eb76157a8e4bf","modified":1580185352709},{"_id":"source/_posts/vsftpd安装与配置.md","hash":"43ab1921c4fefdcdf3a6e32cebd10aab7c750a07","modified":1580212722936},{"_id":"source/categories/index.md","hash":"405a841488ae7c849d0e47f24e1b3f78915d9974","modified":1580201601679},{"_id":"source/tags/index.md","hash":"b2af9491a24cca600fb19574c63bed926785c8ab","modified":1580201606255},{"_id":"themes/nexmoe/README/english.md","hash":"44cb225c9abf00c41ffc229ff9407fe3643de351","modified":1580180770907},{"_id":"themes/nexmoe/WIKI/README.md","hash":"82ea9afaa0d1a61eefb4fd9a742a8f1f5f18a49d","modified":1580180770911},{"_id":"themes/nexmoe/WIKI/deploy.sh","hash":"695d79ccf8b459d63b48f583ff517f8bda56c0a2","modified":1580180770924},{"_id":"themes/nexmoe/WIKI/package.json","hash":"12e2e1fcf88928935445c6c65664b58f9b3865e2","modified":1580180770937},{"_id":"themes/nexmoe/font/QQ.svg","hash":"195665f0d13e71bbbea8ecbe2e46c0e4e67341fe","modified":1580180770946},{"_id":"themes/nexmoe/font/appstore-fill.svg","hash":"6ecc527b424afb79bca7d26191c53ebc08091454","modified":1580180770947},{"_id":"themes/nexmoe/font/areachart.svg","hash":"71e8bef524be4ba17ac9918d8598a606b2bb26c9","modified":1580180770947},{"_id":"themes/nexmoe/font/battlenet.svg","hash":"961c2592ed5ea31319bd476e481549d69e8d075d","modified":1580180770949},{"_id":"themes/nexmoe/font/bilibili.svg","hash":"0f9d92835db855bf581b9858a8fc1e3380be8808","modified":1580180770950},{"_id":"themes/nexmoe/font/calendar-fill.svg","hash":"05e5b979cf8d150731c0eab66a4394df9498f1d6","modified":1580180770950},{"_id":"themes/nexmoe/font/container.svg","hash":"851225195cff6589a5247cb383194057190dd842","modified":1580180770951},{"_id":"themes/nexmoe/font/dribbble.svg","hash":"0785c0b322c849b0b4736b88fc5d4fed7fbaf07d","modified":1580180770951},{"_id":"themes/nexmoe/font/ellipsis.svg","hash":"c4074867e95f14d55c3e44145ef6388f60684c5e","modified":1580180770952},{"_id":"themes/nexmoe/font/eye-fill.svg","hash":"158b8b01f5c43219b599799273a0f8d553e91723","modified":1580180770952},{"_id":"themes/nexmoe/font/github.svg","hash":"b10f18d0644d120624c25b8ad5a2bc1ef5cff3a0","modified":1580180770953},{"_id":"themes/nexmoe/font/home.svg","hash":"97ab890dc43804b584ce3bb407bdbbb32030391b","modified":1580180770953},{"_id":"themes/nexmoe/font/info-circle.svg","hash":"016e0515fccbd158cd1094376910725f7325acd8","modified":1580180770954},{"_id":"themes/nexmoe/font/left.svg","hash":"3fa57b536daade473b90cd496a39962c90de12ab","modified":1580180770954},{"_id":"themes/nexmoe/font/mail-fill.svg","hash":"88ef0ea02f5449d7d24ce3f957847219e5205fa0","modified":1580180770955},{"_id":"themes/nexmoe/font/menu.svg","hash":"93c34d0e2156caa8dca37007da3647a6af0fa352","modified":1580180770955},{"_id":"themes/nexmoe/font/right.svg","hash":"640b5fad35d5b1b1052c2f44bb58b1db5446a296","modified":1580180770956},{"_id":"themes/nexmoe/font/steam.svg","hash":"cf35facf841e5be58ac7c35945ae4a576d460b7c","modified":1580180770956},{"_id":"themes/nexmoe/font/tag-fill.svg","hash":"f4a7d7cb92e40295a6b4c37b8d06385cf024eb9d","modified":1580180770956},{"_id":"themes/nexmoe/font/tags-fill.svg","hash":"87f59d1b14a5160e726ec3edc6e06fbe953f40f4","modified":1580180770957},{"_id":"themes/nexmoe/font/telegram.svg","hash":"51d8f5b3fffb40696f5830608ce2abfcebf36e2c","modified":1580180770957},{"_id":"themes/nexmoe/font/time-circle-fill.svg","hash":"ecdacea2e496c505a7d07770e54c503420ef9290","modified":1580180770958},{"_id":"themes/nexmoe/font/twitter.svg","hash":"bfad6767a6cc6058f0e4798225dc8f5898a228ca","modified":1580180770959},{"_id":"themes/nexmoe/font/unorderedlist.svg","hash":"46722843f0674341bffd8ad7f2da1deabde2ba82","modified":1580180770959},{"_id":"themes/nexmoe/font/wechat-fill.svg","hash":"fdb6fa45343307af0d6ebb70a75688afbc4444b3","modified":1580180770960},{"_id":"themes/nexmoe/font/weibo.svg","hash":"277d4076a9d17b8762e66fe81cbf0ec9f99a59cd","modified":1580180770960},{"_id":"themes/nexmoe/font/youtube.svg","hash":"fe59b1fb78e5661feae8775bdafe855f28092f0c","modified":1580180770961},{"_id":"themes/nexmoe/font/zhihu.svg","hash":"78e11c8e8f9ba84ebb2043a8fdbc484b56db3a95","modified":1580180770961},{"_id":"themes/nexmoe/languages/default.yml","hash":"87a7e349b1b6783d843bb404701aa26f60fd6d3d","modified":1580180770962},{"_id":"themes/nexmoe/languages/en.yml","hash":"83430833744a430b49adec9298473ad2d32066e1","modified":1580180770963},{"_id":"themes/nexmoe/languages/zh-CN.yml","hash":"08782500dd6492ee6e4ab4b46b45b7739951e0a7","modified":1580180770963},{"_id":"themes/nexmoe/languages/zh-TW.yml","hash":"ce19cbbeb610e27645b3109414bf546c70629442","modified":1580180770964},{"_id":"themes/nexmoe/languages/zh-HK.yml","hash":"ce19cbbeb610e27645b3109414bf546c70629442","modified":1580180770963},{"_id":"themes/nexmoe/layout/archive.ejs","hash":"109f6951ee02d1d64adfaef9fb4c3874988d25cb","modified":1580202462793},{"_id":"themes/nexmoe/layout/index.ejs","hash":"2ef7da450eecde90404843830d5b817b6e42b11d","modified":1580180770980},{"_id":"themes/nexmoe/layout/layout.ejs","hash":"147297402a11975f58901cf1352b19ed696307a9","modified":1580180770981},{"_id":"themes/nexmoe/layout/post.ejs","hash":"97c2db6dd930f4db333d0ec5f8bdf13a1b200288","modified":1580180770981},{"_id":"themes/nexmoe/layout/py.ejs","hash":"87a45d45c8925574985dd6b416112f18a10b680c","modified":1580180770982},{"_id":"themes/nexmoe/source/favicon.ico","hash":"979402f90691e8b06d78ed1b2b53ed81f786dcca","modified":1580215057378},{"_id":"themes/nexmoe/WIKI/.vuepress/enhanceApp.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1580180770909},{"_id":"themes/nexmoe/.github/workflows/vuepress.yml","hash":"0fb8c554c702d12edde72d2185cc08b2cea86522","modified":1580180770903},{"_id":"themes/nexmoe/.github/ISSUE_TEMPLATE/bug_report_en.md","hash":"557484415c610222b16b58df470c2a768782c4fc","modified":1580180770900},{"_id":"themes/nexmoe/.github/ISSUE_TEMPLATE/bug_report_zh.md","hash":"d6c77dbb2a3d638d748280fb37dd29375aebe98c","modified":1580180770901},{"_id":"themes/nexmoe/.github/ISSUE_TEMPLATE/feature_request_en.md","hash":"803f6736473a122ed78867e64681defcd2edd954","modified":1580180770902},{"_id":"themes/nexmoe/.github/ISSUE_TEMPLATE/feature_request_zh.md","hash":"843abf5e1d7b06cb1feddd75f7025150d46a91c2","modified":1580180770902},{"_id":"themes/nexmoe/WIKI/.vuepress/config.js","hash":"f9cfed3718a036fe884d3841d567be0e937691df","modified":1580180770908},{"_id":"themes/nexmoe/WIKI/contribution/README.md","hash":"727c364d849d6210eb692c2f9615b65a9008928f","modified":1580180770914},{"_id":"themes/nexmoe/WIKI/contribution/catalog.md","hash":"618600f2eeb12aaac7c4acaf02f4165c44293f55","modified":1580180770915},{"_id":"themes/nexmoe/WIKI/en/README.md","hash":"1e13b8bdc8328ac5c149e44189bb5e989ecd97ab","modified":1580180770927},{"_id":"themes/nexmoe/WIKI/hexo/README.md","hash":"bdf07131377ca4d85bd363742c6da99bb807438b","modified":1580180770931},{"_id":"themes/nexmoe/WIKI/hexo/comment.md","hash":"a86c3dc190b08ac9cf9e2bfa90107e6087aab84c","modified":1580180770931},{"_id":"themes/nexmoe/WIKI/hexo/math.md","hash":"2c58ff9e49eacf79adb4ad18a679ab0436b12b14","modified":1580180770932},{"_id":"themes/nexmoe/WIKI/hexo/notice.md","hash":"b38e3e64f21dad7fa6ffef75e1a4711ef2679b8a","modified":1580180770932},{"_id":"themes/nexmoe/WIKI/hexo/statistics.md","hash":"6cf6ae2060569d813573c00a060ef45cf153b635","modified":1580180770932},{"_id":"themes/nexmoe/WIKI/hexo/use.md","hash":"b26dbeff0f9eba56d74c2a3ea21373f4c8f22e13","modified":1580180770933},{"_id":"themes/nexmoe/layout/_partial/after-footer.ejs","hash":"49eadec58eec65061ac631ed8927ae2b39947bd5","modified":1580180770973},{"_id":"themes/nexmoe/layout/_partial/analytics.ejs","hash":"e53883f2bb9921cb08437f433d5d4d5cf52ab297","modified":1580180770973},{"_id":"themes/nexmoe/layout/_partial/comment.ejs","hash":"6e48ae4a79ad9e14d00244c15cd6e9ad04b99eb4","modified":1580180770974},{"_id":"themes/nexmoe/layout/_partial/copyright.ejs","hash":"3df97e05990b73c8d3a73959e2eb3e38da77386e","modified":1580180770974},{"_id":"themes/nexmoe/layout/_partial/header.ejs","hash":"7d9fd0587d667400295e506ba564609ee178bc38","modified":1580180770975},{"_id":"themes/nexmoe/layout/_partial/paginator.ejs","hash":"6b2ff80338679f04e91f324d1231760e038a309d","modified":1580180770975},{"_id":"themes/nexmoe/layout/_partial/sidebar.ejs","hash":"58c53d620cc0695b68c1e18a9f0d97fc888357cc","modified":1580180770976},{"_id":"themes/nexmoe/layout/_partial/site-verification.ejs","hash":"600319729da09e366c05e104fe68a821b087c027","modified":1580180770976},{"_id":"themes/nexmoe/layout/_widget/archive.ejs","hash":"eb9890c7bf2441722af87a9593b82708bdef62db","modified":1580180770977},{"_id":"themes/nexmoe/layout/_widget/category.ejs","hash":"99113b9f2cb4ffefdda3e3a343647ac6a5083091","modified":1580180770978},{"_id":"themes/nexmoe/layout/_widget/recent_posts.ejs","hash":"7d9eaf8228eda803aa4956e55432f78e056d6a01","modified":1580180770978},{"_id":"themes/nexmoe/layout/_widget/search.ejs","hash":"2161a08a12c11ee5bae7655ae7f83c5e2d239d05","modified":1580180770978},{"_id":"themes/nexmoe/layout/_widget/social.ejs","hash":"3ad3fc3cb32cd24adf00e959e4afd26aa55c8522","modified":1580180770978},{"_id":"themes/nexmoe/layout/_widget/tag.ejs","hash":"be2cbf60fe1be5591a53312a36558723816d605b","modified":1580180770979},{"_id":"themes/nexmoe/layout/_widget/tagcloud.ejs","hash":"a7a83acd837276573eacb10e41028e19c355c179","modified":1580180770979},{"_id":"themes/nexmoe/source/css/style.styl","hash":"5ee906619d1fec766952bfc61da1a9c0cdde19d3","modified":1580180770985},{"_id":"themes/nexmoe/source/images/avatar.png","hash":"3bf1e561f170574126299c7a9e88b49b6166790e","modified":1580215029878},{"_id":"themes/nexmoe/source/js/app.js","hash":"00665a994cd6261a04bed87157c24d2cd063b49c","modified":1580180770986},{"_id":"themes/nexmoe/scripts/helper/css_auto_version.js","hash":"1df4e02d36ae52e64f4f4e709e488d6e413d9d0c","modified":1580180770983},{"_id":"themes/nexmoe/scripts/helper/js_auto_version.js","hash":"912dfbe49c51614ef886c967349d3cb054de6f2d","modified":1580180770983},{"_id":"themes/nexmoe/WIKI/.vuepress/public/manifest.json","hash":"be8f17b689ddfab04d39b08f9b295a6f144a6bf5","modified":1580180770910},{"_id":"themes/nexmoe/WIKI/.vuepress/styles/palette.styl","hash":"678603df862e062eee3e229839ec0dab3e6b316c","modified":1580180770910},{"_id":"themes/nexmoe/WIKI/component/basic/color.md","hash":"210f6f5952b58b6001f784129681ff59f5cbc9f9","modified":1580180770912},{"_id":"themes/nexmoe/WIKI/component/basic/icon.md","hash":"ba90c85053ce4c7f8e35964810fd6bf173ae2adb","modified":1580180770913},{"_id":"themes/nexmoe/WIKI/en/Hexo/comment.md","hash":"445034e0ec92af4c7184f7db65d6c3f7863b4775","modified":1580180770926},{"_id":"themes/nexmoe/WIKI/en/Hexo/README.md","hash":"55e0dfdc52fa4cb133f8182cf29f5edd16dca34d","modified":1580180770925},{"_id":"themes/nexmoe/WIKI/en/Hexo/notice.md","hash":"9fc526aff1afdcd6d4a74fdd051810101d490f01","modified":1580180770926},{"_id":"themes/nexmoe/WIKI/en/Hexo/use.md","hash":"c3e51cb400d61bf02724a7a4577c239c9a301f25","modified":1580180770927},{"_id":"themes/nexmoe/cover.png","hash":"56de9278ccf3bca1cae7eb7e15bad8aa593f1a55","modified":1580180770944},{"_id":"themes/nexmoe/layout/_partial/_comment/DiscussBot.ejs","hash":"92fb25b5204b325eb18eea0c15ddb4f4116e35e2","modified":1580180770969},{"_id":"themes/nexmoe/layout/_partial/_comment/disqus.ejs","hash":"e1e70a619cf3499ef8b054c8fb4b23865a554b6b","modified":1580180770970},{"_id":"themes/nexmoe/layout/_partial/_comment/changyan.ejs","hash":"8a520fd9a9704208c23abcb689bae33acd1167db","modified":1580180770969},{"_id":"themes/nexmoe/layout/_partial/_comment/disqusjs.ejs","hash":"7518e88f2504b9844f71190e079df07f51847472","modified":1580180770970},{"_id":"themes/nexmoe/layout/_partial/_comment/gitalk.ejs","hash":"a3a33112234fee49646a9c11fcbdf2ed1a7777a8","modified":1580180770971},{"_id":"themes/nexmoe/layout/_partial/_comment/gitment.ejs","hash":"d4a99db9f2daf7bcdbcf637f478d925d5d840fe4","modified":1580180770971},{"_id":"themes/nexmoe/layout/_partial/_comment/livere.ejs","hash":"e96e1510ba2a8ccb1edebc378c566fadaed09e50","modified":1580180770972},{"_id":"themes/nexmoe/layout/_partial/_comment/valine.ejs","hash":"97a699da23500cd6b16c857a60d123064d1653f9","modified":1580180770972},{"_id":"themes/nexmoe/layout/_partial/_analytics/baidu.ejs","hash":"cc782e1363c8bbb6277c3825bb9eac83762bc26d","modified":1580180770965},{"_id":"themes/nexmoe/layout/_partial/_analytics/google.ejs","hash":"97f3a717495c8cc71d5d3c7ab69ddd589a69a038","modified":1580180770966},{"_id":"themes/nexmoe/layout/_partial/_analytics/cnzz.ejs","hash":"345ed559b76930bed05e1b393c12f09d42c2312e","modified":1580180770965},{"_id":"themes/nexmoe/layout/_partial/_analytics/gtags.ejs","hash":"2c429eef83e712531a08de370b06f1f00ac7398b","modified":1580180770966},{"_id":"themes/nexmoe/layout/_partial/_analytics/gtm-body.ejs","hash":"1471e3a49ad6c93fd33b18545b43805c48695e23","modified":1580180770966},{"_id":"themes/nexmoe/layout/_partial/_analytics/gtm-head.ejs","hash":"5638bed9cfe2e86aeee77adc883b2a3e1ecd76ff","modified":1580180770967},{"_id":"themes/nexmoe/layout/_partial/_analytics/tencent.ejs","hash":"6f7d514f157fbdb505e52dda2dc4f35dcdb2685e","modified":1580180770968},{"_id":"themes/nexmoe/layout/_partial/_analytics/la.ejs","hash":"e08b1f111068c62e625b6790e66d8a5f625246ba","modified":1580180770968},{"_id":"themes/nexmoe/WIKI/package-lock.json","hash":"1997109d6b824afbdb21bed498a60417aa3e0356","modified":1580180770936},{"_id":"themes/nexmoe/WIKI/yarn.lock","hash":"6f5aa2884599f7784d969a601a4ca96b837e4c45","modified":1580180770940},{"_id":"themes/nexmoe/WIKI/en/component/basic/color.md","hash":"7d7c6a408b7d38a5f7cd608d0e852e4d0ac0bca4","modified":1580180770929},{"_id":"themes/nexmoe/WIKI/en/component/basic/icon.md","hash":"3101ced9978917c9869fd99693a4eb73a29a25b2","modified":1580180770930},{"_id":"themes/nexmoe/WIKI/cover.png","hash":"933112bf55ba0dfff98fd8f3e670f12fe83d3c9f","modified":1580180770923},{"_id":"public/atom.xml","hash":"bd2825c60293a37b5b72f3aa867fe55788fd8c55","modified":1580218030717},{"_id":"public/baidusitemap.xml","hash":"5b50aa80590f7315cbdffc79b2385fbb12d993c7","modified":1580218030717},{"_id":"public/content.json","hash":"abf49e9ff7d469b93e966cc87db19daf71527c95","modified":1580218030718},{"_id":"public/sitemap.xml","hash":"74ae1e749a80472574fa70a6861d77b49317c970","modified":1580218030718},{"_id":"public/searchVersion.txt","hash":"187d6f1ef3d61de8d91e5499537d2fe01b3af401","modified":1580218030717},{"_id":"public/categories/index.html","hash":"08871d4e4e8d248be0d4fca5413727522d51ef1f","modified":1580218030940},{"_id":"public/tags/index.html","hash":"98f03530a7e421cc897bbd3b3d230439515f8a0f","modified":1580218030941},{"_id":"public/2019/05/23/VSCode插件提升hexo体验/index.html","hash":"c6b3037c3555aa181c5f7dcc8a5066c71d61163a","modified":1580218030971},{"_id":"public/2019/05/23/Tomcat启动时卡住/index.html","hash":"b52444d93f713891a802edfbb98ae0fdea2b07fc","modified":1580218030971},{"_id":"public/2019/05/22/Linux配置tomcat自动启动/index.html","hash":"59ee176d84f610c1753c6ed8963e9c07c74219ee","modified":1580218030971},{"_id":"public/archives/index.html","hash":"d49729ef063ffdf96582577ece13a6d5a5f1a390","modified":1580218030972},{"_id":"public/archives/2019/index.html","hash":"e1143b1f635ff3ba8a6cac9289831cd6f527047b","modified":1580218030972},{"_id":"public/archives/2019/05/index.html","hash":"ee212da55c0fcca0ea36cc2215586a7cb26228ae","modified":1580218030972},{"_id":"public/categories/技术/index.html","hash":"65473da62f64edc9ac780f51a88e60464965c6ca","modified":1580218030971},{"_id":"public/categories/静态博客/index.html","hash":"e08aa4463ade6b0015b390717b6735017f24502a","modified":1580218030971},{"_id":"public/index.html","hash":"bd722cf00660582f196d1e902033b0b42c8b0e5a","modified":1580218030972},{"_id":"public/tags/linux/index.html","hash":"e591be1a62b30a48954d811ccc360f4e6ac34b86","modified":1580218030972},{"_id":"public/tags/tomcat/index.html","hash":"4f63c2297856a0d0b117e20cb529cd868e2c32a1","modified":1580218030972},{"_id":"public/tags/hexo/index.html","hash":"bc0586e4ac39363b134e0f08af70a4134bd9db7a","modified":1580218030972},{"_id":"public/2019/05/22/vsftpd安装与配置/index.html","hash":"b0aa590d05ed8fee4bbc82338cc8ba3b246a3dab","modified":1580218030972},{"_id":"public/tags/vsftpd/index.html","hash":"3d9b783785521786e0f52f02119e6219269f8498","modified":1580218030972},{"_id":"public/favicon.ico","hash":"979402f90691e8b06d78ed1b2b53ed81f786dcca","modified":1580216023129},{"_id":"public/images/avatar.png","hash":"3bf1e561f170574126299c7a9e88b49b6166790e","modified":1580216023129},{"_id":"public/js/app.js","hash":"8f285a150a14373377c68b2e255907c393819289","modified":1580216023403},{"_id":"public/css/style.css","hash":"9a1ed15c54105c395bb0f7067f304aea21a3a55a","modified":1580216023403},{"_id":"source/_posts/使用caddy作为HTTPS服务器.md","hash":"56dbea53d0587cf7f18cceff4f65cef02cb25e66","modified":1580217996256},{"_id":"public/2019/05/22/使用caddy作为HTTPS服务器/index.html","hash":"ce0b3b8fd9c4a2713dd4f2b8202a5805f6bbc396","modified":1580218030973},{"_id":"public/tags/caddy/index.html","hash":"afcc0965c61ff2f07e699b00e48ac368d2ef4c34","modified":1580218030973},{"_id":"public/tags/https/index.html","hash":"684c34ddc017502c72585a73eb07e01bf69fcddf","modified":1580218030973}],"Category":[{"name":"技术","_id":"ck5xvtiiw0006vwudzauuhfi5"},{"name":"静态博客","_id":"ck5xvtij10008vwud16uwelt5"}],"Data":[],"Page":[{"date":"2018-07-22T05:45:56.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ndate: 2018-07-22 13:45:56\ntype: categories\n---\n","updated":"2020-01-28T08:53:21.679Z","path":"categories/index.html","title":"","comments":1,"layout":"page","_id":"ck5xvtii00000vwudz2ucj14c","content":"","site":{"data":{}},"excerpt":"","more":""},{"date":"2018-07-22T05:47:56.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ndate: 2018-07-22 13:47:56\ntype: \"tags\"\n---\n","updated":"2020-01-28T08:53:26.255Z","path":"tags/index.html","title":"","comments":1,"layout":"page","_id":"ck5xvtii60002vwudbdmhr7yw","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Linux配置tomcat自动启动","date":"2019-05-22T13:15:00.000Z","cover":"https://i.loli.net/2020/01/28/LsQX7fMbogHA8lG.jpg","_content":"将tomcat配置成linux service，跟随linux启动\n<!-- more --> \n## 1. 编辑tomcat/bin/catalina.sh\n在catalina.sh中添加java和tomcat环境变量\n```shell\nCATALINA_HOME=/usr/local/tomcat\nJAVA_HOME=/usr/lib/java/jdk1.7.0_79\n```\n根据实际情况配置环境变量，然后将catalina.sh复制到/etc/init.d/目录下\n```shell\ncp tomcat/bin/catalina.sh /etc/init.d/tomcat\n```\n## 2. 更新tomcat service，并启动：\n```shell\nupdate-rc.d tomcat defaults\nservice tomcat start\n```","source":"_posts/Linux配置tomcat自动启动.md","raw":"---\ntitle: Linux配置tomcat自动启动\ndate: 2019-05-22 21:15:00\ncategories: 技术\ncover: https://i.loli.net/2020/01/28/LsQX7fMbogHA8lG.jpg\ntags: \n    - linux\n    - tomcat\n---\n将tomcat配置成linux service，跟随linux启动\n<!-- more --> \n## 1. 编辑tomcat/bin/catalina.sh\n在catalina.sh中添加java和tomcat环境变量\n```shell\nCATALINA_HOME=/usr/local/tomcat\nJAVA_HOME=/usr/lib/java/jdk1.7.0_79\n```\n根据实际情况配置环境变量，然后将catalina.sh复制到/etc/init.d/目录下\n```shell\ncp tomcat/bin/catalina.sh /etc/init.d/tomcat\n```\n## 2. 更新tomcat service，并启动：\n```shell\nupdate-rc.d tomcat defaults\nservice tomcat start\n```","slug":"Linux配置tomcat自动启动","published":1,"updated":"2020-01-28T04:53:03.480Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck5xvtii20001vwudv4gya4yw","content":"<p>将tomcat配置成linux service，跟随linux启动</p>\n<a id=\"more\"></a> \n<h2 id=\"1-编辑tomcat-bin-catalina-sh\"><a href=\"#1-编辑tomcat-bin-catalina-sh\" class=\"headerlink\" title=\"1. 编辑tomcat/bin/catalina.sh\"></a>1. 编辑tomcat/bin/catalina.sh</h2><p>在catalina.sh中添加java和tomcat环境变量</p>\n<pre><code class=\"shell\">CATALINA_HOME=/usr/local/tomcat\nJAVA_HOME=/usr/lib/java/jdk1.7.0_79</code></pre>\n<p>根据实际情况配置环境变量，然后将catalina.sh复制到/etc/init.d/目录下</p>\n<pre><code class=\"shell\">cp tomcat/bin/catalina.sh /etc/init.d/tomcat</code></pre>\n<h2 id=\"2-更新tomcat-service，并启动：\"><a href=\"#2-更新tomcat-service，并启动：\" class=\"headerlink\" title=\"2. 更新tomcat service，并启动：\"></a>2. 更新tomcat service，并启动：</h2><pre><code class=\"shell\">update-rc.d tomcat defaults\nservice tomcat start</code></pre>\n","site":{"data":{}},"excerpt":"<p>将tomcat配置成linux service，跟随linux启动</p>","more":"<h2 id=\"1-编辑tomcat-bin-catalina-sh\"><a href=\"#1-编辑tomcat-bin-catalina-sh\" class=\"headerlink\" title=\"1. 编辑tomcat/bin/catalina.sh\"></a>1. 编辑tomcat/bin/catalina.sh</h2><p>在catalina.sh中添加java和tomcat环境变量</p>\n<pre><code class=\"shell\">CATALINA_HOME=/usr/local/tomcat\nJAVA_HOME=/usr/lib/java/jdk1.7.0_79</code></pre>\n<p>根据实际情况配置环境变量，然后将catalina.sh复制到/etc/init.d/目录下</p>\n<pre><code class=\"shell\">cp tomcat/bin/catalina.sh /etc/init.d/tomcat</code></pre>\n<h2 id=\"2-更新tomcat-service，并启动：\"><a href=\"#2-更新tomcat-service，并启动：\" class=\"headerlink\" title=\"2. 更新tomcat service，并启动：\"></a>2. 更新tomcat service，并启动：</h2><pre><code class=\"shell\">update-rc.d tomcat defaults\nservice tomcat start</code></pre>"},{"title":"VSCode插件提升hexo体验","date":"2019-05-23T07:19:07.000Z","cover":"https://i.loli.net/2020/01/28/RB47StXubNqiFmf.jpg","_content":"Hexo的编写与部署可以通过vscode进行，同时通过对插件的使用也可以增强体验，提升效率\n\n<!-- more -->\n## 1. 图片剪切插件 [Paste Image](https://marketplace.visualstudio.com/items?itemName=mushan.vscode-paste-image)\nhexo3.0版本中可以在_config.yml中设置\n```\npost_asset_folder: true\n```\n这样在hexo new 的时候会生成同名的文件夹，同时在md文件中输入\n```\n{% asset_img xxx %}\n```\n就可以插入这个文件夹中的图片。为了方便进行这个步骤，使用vscode中的插件Paste Image，安装之后，在user-settings里新增两条配置：\n```\n\"pasteImage.path\": \"${currentFileNameWithoutExt}/\",\n\"pasteImage.insertPattern\": \"{% asset_img ${imageFilePath} %}\"\n```\n这样粘贴图片的时候会自动保存到文件夹中，并自动引用。注意这个插件只适合与剪切板使用，直接拖拽文件是不管用的。\n\n## 2. markdown预览插件 [Markdown Preview Enhanced](https://marketplace.visualstudio.com/items?itemName=shd101wyy.markdown-preview-enhanced)\n\n利用该插件预览\n```\n{% asset_img xxx %}\n```\n形式插入的图片，主要分为两步\n##### 1. ctrl+shift+P 找到 Markdown Preview Enhanced: Extend Parser，打开parser.js\n##### 2. 修改其中onWillParseMarkdown方法为：\n```javascript\nonWillParseMarkdown: function(markdown) {\n  return new Promise((resolve, reject)=> {\n    markdown = markdown.replace(\n      /\\{%\\s*asset_img\\s*(.*)\\s*%\\}/g,\n      (whole, content) => (`![](${content})`)\n    )\n    return resolve(markdown)\n  })\n},\n```","source":"_posts/VSCode插件提升hexo体验.md","raw":"---\ntitle: VSCode插件提升hexo体验\ndate: 2019-05-23 15:19:07\ncategories: 静态博客\ncover: https://i.loli.net/2020/01/28/RB47StXubNqiFmf.jpg\ntags: hexo\n---\nHexo的编写与部署可以通过vscode进行，同时通过对插件的使用也可以增强体验，提升效率\n\n<!-- more -->\n## 1. 图片剪切插件 [Paste Image](https://marketplace.visualstudio.com/items?itemName=mushan.vscode-paste-image)\nhexo3.0版本中可以在_config.yml中设置\n```\npost_asset_folder: true\n```\n这样在hexo new 的时候会生成同名的文件夹，同时在md文件中输入\n```\n{% asset_img xxx %}\n```\n就可以插入这个文件夹中的图片。为了方便进行这个步骤，使用vscode中的插件Paste Image，安装之后，在user-settings里新增两条配置：\n```\n\"pasteImage.path\": \"${currentFileNameWithoutExt}/\",\n\"pasteImage.insertPattern\": \"{% asset_img ${imageFilePath} %}\"\n```\n这样粘贴图片的时候会自动保存到文件夹中，并自动引用。注意这个插件只适合与剪切板使用，直接拖拽文件是不管用的。\n\n## 2. markdown预览插件 [Markdown Preview Enhanced](https://marketplace.visualstudio.com/items?itemName=shd101wyy.markdown-preview-enhanced)\n\n利用该插件预览\n```\n{% asset_img xxx %}\n```\n形式插入的图片，主要分为两步\n##### 1. ctrl+shift+P 找到 Markdown Preview Enhanced: Extend Parser，打开parser.js\n##### 2. 修改其中onWillParseMarkdown方法为：\n```javascript\nonWillParseMarkdown: function(markdown) {\n  return new Promise((resolve, reject)=> {\n    markdown = markdown.replace(\n      /\\{%\\s*asset_img\\s*(.*)\\s*%\\}/g,\n      (whole, content) => (`![](${content})`)\n    )\n    return resolve(markdown)\n  })\n},\n```","slug":"VSCode插件提升hexo体验","published":1,"updated":"2020-01-28T11:56:49.011Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck5xvtii70003vwudoembyxd4","content":"<p>Hexo的编写与部署可以通过vscode进行，同时通过对插件的使用也可以增强体验，提升效率</p>\n<a id=\"more\"></a>\n<h2 id=\"1-图片剪切插件-Paste-Image\"><a href=\"#1-图片剪切插件-Paste-Image\" class=\"headerlink\" title=\"1. 图片剪切插件 Paste Image\"></a>1. 图片剪切插件 <a href=\"https://marketplace.visualstudio.com/items?itemName=mushan.vscode-paste-image\" target=\"_blank\" rel=\"noopener\">Paste Image</a></h2><p>hexo3.0版本中可以在_config.yml中设置</p>\n<pre><code>post_asset_folder: true</code></pre><p>这样在hexo new 的时候会生成同名的文件夹，同时在md文件中输入</p>\n<pre><code>{% asset_img xxx %}</code></pre><p>就可以插入这个文件夹中的图片。为了方便进行这个步骤，使用vscode中的插件Paste Image，安装之后，在user-settings里新增两条配置：</p>\n<pre><code>&quot;pasteImage.path&quot;: &quot;${currentFileNameWithoutExt}/&quot;,\n&quot;pasteImage.insertPattern&quot;: &quot;{% asset_img ${imageFilePath} %}&quot;</code></pre><p>这样粘贴图片的时候会自动保存到文件夹中，并自动引用。注意这个插件只适合与剪切板使用，直接拖拽文件是不管用的。</p>\n<h2 id=\"2-markdown预览插件-Markdown-Preview-Enhanced\"><a href=\"#2-markdown预览插件-Markdown-Preview-Enhanced\" class=\"headerlink\" title=\"2. markdown预览插件 Markdown Preview Enhanced\"></a>2. markdown预览插件 <a href=\"https://marketplace.visualstudio.com/items?itemName=shd101wyy.markdown-preview-enhanced\" target=\"_blank\" rel=\"noopener\">Markdown Preview Enhanced</a></h2><p>利用该插件预览</p>\n<pre><code>{% asset_img xxx %}</code></pre><p>形式插入的图片，主要分为两步</p>\n<h5 id=\"1-ctrl-shift-P-找到-Markdown-Preview-Enhanced-Extend-Parser，打开parser-js\"><a href=\"#1-ctrl-shift-P-找到-Markdown-Preview-Enhanced-Extend-Parser，打开parser-js\" class=\"headerlink\" title=\"1. ctrl+shift+P 找到 Markdown Preview Enhanced: Extend Parser，打开parser.js\"></a>1. ctrl+shift+P 找到 Markdown Preview Enhanced: Extend Parser，打开parser.js</h5><h5 id=\"2-修改其中onWillParseMarkdown方法为：\"><a href=\"#2-修改其中onWillParseMarkdown方法为：\" class=\"headerlink\" title=\"2. 修改其中onWillParseMarkdown方法为：\"></a>2. 修改其中onWillParseMarkdown方法为：</h5><pre><code class=\"javascript\">onWillParseMarkdown: function(markdown) {\n  return new Promise((resolve, reject)=&gt; {\n    markdown = markdown.replace(\n      /\\{%\\s*asset_img\\s*(.*)\\s*%\\}/g,\n      (whole, content) =&gt; (`![](${content})`)\n    )\n    return resolve(markdown)\n  })\n},</code></pre>\n","site":{"data":{}},"excerpt":"<p>Hexo的编写与部署可以通过vscode进行，同时通过对插件的使用也可以增强体验，提升效率</p>","more":"<h2 id=\"1-图片剪切插件-Paste-Image\"><a href=\"#1-图片剪切插件-Paste-Image\" class=\"headerlink\" title=\"1. 图片剪切插件 Paste Image\"></a>1. 图片剪切插件 <a href=\"https://marketplace.visualstudio.com/items?itemName=mushan.vscode-paste-image\" target=\"_blank\" rel=\"noopener\">Paste Image</a></h2><p>hexo3.0版本中可以在_config.yml中设置</p>\n<pre><code>post_asset_folder: true</code></pre><p>这样在hexo new 的时候会生成同名的文件夹，同时在md文件中输入</p>\n<pre><code>{% asset_img xxx %}</code></pre><p>就可以插入这个文件夹中的图片。为了方便进行这个步骤，使用vscode中的插件Paste Image，安装之后，在user-settings里新增两条配置：</p>\n<pre><code>&quot;pasteImage.path&quot;: &quot;${currentFileNameWithoutExt}/&quot;,\n&quot;pasteImage.insertPattern&quot;: &quot;{% asset_img ${imageFilePath} %}&quot;</code></pre><p>这样粘贴图片的时候会自动保存到文件夹中，并自动引用。注意这个插件只适合与剪切板使用，直接拖拽文件是不管用的。</p>\n<h2 id=\"2-markdown预览插件-Markdown-Preview-Enhanced\"><a href=\"#2-markdown预览插件-Markdown-Preview-Enhanced\" class=\"headerlink\" title=\"2. markdown预览插件 Markdown Preview Enhanced\"></a>2. markdown预览插件 <a href=\"https://marketplace.visualstudio.com/items?itemName=shd101wyy.markdown-preview-enhanced\" target=\"_blank\" rel=\"noopener\">Markdown Preview Enhanced</a></h2><p>利用该插件预览</p>\n<pre><code>{% asset_img xxx %}</code></pre><p>形式插入的图片，主要分为两步</p>\n<h5 id=\"1-ctrl-shift-P-找到-Markdown-Preview-Enhanced-Extend-Parser，打开parser-js\"><a href=\"#1-ctrl-shift-P-找到-Markdown-Preview-Enhanced-Extend-Parser，打开parser-js\" class=\"headerlink\" title=\"1. ctrl+shift+P 找到 Markdown Preview Enhanced: Extend Parser，打开parser.js\"></a>1. ctrl+shift+P 找到 Markdown Preview Enhanced: Extend Parser，打开parser.js</h5><h5 id=\"2-修改其中onWillParseMarkdown方法为：\"><a href=\"#2-修改其中onWillParseMarkdown方法为：\" class=\"headerlink\" title=\"2. 修改其中onWillParseMarkdown方法为：\"></a>2. 修改其中onWillParseMarkdown方法为：</h5><pre><code class=\"javascript\">onWillParseMarkdown: function(markdown) {\n  return new Promise((resolve, reject)=&gt; {\n    markdown = markdown.replace(\n      /\\{%\\s*asset_img\\s*(.*)\\s*%\\}/g,\n      (whole, content) =&gt; (`![](${content})`)\n    )\n    return resolve(markdown)\n  })\n},</code></pre>"},{"title":"Tomcat启动时卡住不动","date":"2019-05-23T06:49:32.000Z","cover":"https://i.loli.net/2020/01/28/BYZE6D47izy1aJq.jpg","_content":"tomcat启动以后卡在INFO: Deploying web application directory ...\n\n<!-- more -->\n\n在weblogic的官方文档中 Monitoring and Troubleshooting 标题为 [Avoiding JVM Delays Caused By Random Number Generation](https://docs.oracle.com/cd/E13209_01/wlcp/wlss30/configwlss/jvmrand.html) 的文档\n\nThe library used for random number generation in Sun's JVM relies on /dev/random by default for UNIX platforms. This can potentially block the WebLogic SIP Server process because on some operating systems /dev/random waits for a certain amount of \"noise\" to be generated on the host machine before returning a result. Although /dev/random is more secure, BEA recommends using /dev/urandom if the default JVM configuration delays WebLogic SIP Server startup.\n\nTo determine if your operating system exhibits this behavior, try displaying a portion of the file from a shell prompt:\n\nhead -n 1 /dev/random\n\nIf the command returns immediately, you can use /dev/random as the default generator for SUN's JVM. If the command does not return immediately, use these steps to configure the JVM to use /dev/urandom:\n```\nOpen the $JAVA_HOME/jre/lib/security/java.security file in a text editor.\nChange the line:\n  securerandom.source=file:/dev/random\nto read:\n  securerandom.source=file:/dev/./urandom\nSave your change and exit the text editor.\n```","source":"_posts/Tomcat启动时卡住.md","raw":"---\ntitle: Tomcat启动时卡住不动\ndate: 2019-05-23 14:49:32\ncategories: 技术\ntags: [linux, tomcat]\ncover: https://i.loli.net/2020/01/28/BYZE6D47izy1aJq.jpg\n---\ntomcat启动以后卡在INFO: Deploying web application directory ...\n\n<!-- more -->\n\n在weblogic的官方文档中 Monitoring and Troubleshooting 标题为 [Avoiding JVM Delays Caused By Random Number Generation](https://docs.oracle.com/cd/E13209_01/wlcp/wlss30/configwlss/jvmrand.html) 的文档\n\nThe library used for random number generation in Sun's JVM relies on /dev/random by default for UNIX platforms. This can potentially block the WebLogic SIP Server process because on some operating systems /dev/random waits for a certain amount of \"noise\" to be generated on the host machine before returning a result. Although /dev/random is more secure, BEA recommends using /dev/urandom if the default JVM configuration delays WebLogic SIP Server startup.\n\nTo determine if your operating system exhibits this behavior, try displaying a portion of the file from a shell prompt:\n\nhead -n 1 /dev/random\n\nIf the command returns immediately, you can use /dev/random as the default generator for SUN's JVM. If the command does not return immediately, use these steps to configure the JVM to use /dev/urandom:\n```\nOpen the $JAVA_HOME/jre/lib/security/java.security file in a text editor.\nChange the line:\n  securerandom.source=file:/dev/random\nto read:\n  securerandom.source=file:/dev/./urandom\nSave your change and exit the text editor.\n```","slug":"Tomcat启动时卡住","published":1,"updated":"2020-01-28T04:22:32.709Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck5xvtii80004vwudub4nh86v","content":"<p>tomcat启动以后卡在INFO: Deploying web application directory …</p>\n<a id=\"more\"></a>\n\n<p>在weblogic的官方文档中 Monitoring and Troubleshooting 标题为 <a href=\"https://docs.oracle.com/cd/E13209_01/wlcp/wlss30/configwlss/jvmrand.html\" target=\"_blank\" rel=\"noopener\">Avoiding JVM Delays Caused By Random Number Generation</a> 的文档</p>\n<p>The library used for random number generation in Sun’s JVM relies on /dev/random by default for UNIX platforms. This can potentially block the WebLogic SIP Server process because on some operating systems /dev/random waits for a certain amount of “noise” to be generated on the host machine before returning a result. Although /dev/random is more secure, BEA recommends using /dev/urandom if the default JVM configuration delays WebLogic SIP Server startup.</p>\n<p>To determine if your operating system exhibits this behavior, try displaying a portion of the file from a shell prompt:</p>\n<p>head -n 1 /dev/random</p>\n<p>If the command returns immediately, you can use /dev/random as the default generator for SUN’s JVM. If the command does not return immediately, use these steps to configure the JVM to use /dev/urandom:</p>\n<pre><code>Open the $JAVA_HOME/jre/lib/security/java.security file in a text editor.\nChange the line:\n  securerandom.source=file:/dev/random\nto read:\n  securerandom.source=file:/dev/./urandom\nSave your change and exit the text editor.</code></pre>","site":{"data":{}},"excerpt":"<p>tomcat启动以后卡在INFO: Deploying web application directory …</p>","more":"<p>在weblogic的官方文档中 Monitoring and Troubleshooting 标题为 <a href=\"https://docs.oracle.com/cd/E13209_01/wlcp/wlss30/configwlss/jvmrand.html\" target=\"_blank\" rel=\"noopener\">Avoiding JVM Delays Caused By Random Number Generation</a> 的文档</p>\n<p>The library used for random number generation in Sun’s JVM relies on /dev/random by default for UNIX platforms. This can potentially block the WebLogic SIP Server process because on some operating systems /dev/random waits for a certain amount of “noise” to be generated on the host machine before returning a result. Although /dev/random is more secure, BEA recommends using /dev/urandom if the default JVM configuration delays WebLogic SIP Server startup.</p>\n<p>To determine if your operating system exhibits this behavior, try displaying a portion of the file from a shell prompt:</p>\n<p>head -n 1 /dev/random</p>\n<p>If the command returns immediately, you can use /dev/random as the default generator for SUN’s JVM. If the command does not return immediately, use these steps to configure the JVM to use /dev/urandom:</p>\n<pre><code>Open the $JAVA_HOME/jre/lib/security/java.security file in a text editor.\nChange the line:\n  securerandom.source=file:/dev/random\nto read:\n  securerandom.source=file:/dev/./urandom\nSave your change and exit the text editor.</code></pre>"},{"title":"vsftpd安装与配置","date":"2019-05-22T08:18:06.000Z","cover":"https://i.loli.net/2020/01/28/roVXBWijJgpv3Md.jpg","_content":"vsftpd 是“very secure FTP daemon”的缩写，安全性是它的一个最大的特点。vsftpd 是一个 UNIX 类操作系统上运行的服务器的名字，它可以运行在诸如 Linux、BSD、Solaris、 HP-UNIX等系统上面，是一个完全免费的、开放源代码的ftp服务器软件，支持很多其他的 FTP 服务器所不支持的特征。比如：非常高的安全性需求、带宽限制、良好的可伸缩性、可创建虚拟用户、支持IPv6、速率高等。\n<!-- more --> \n## 1. 安装vsftpd\n对于ubuntu系统可以很容易的通过apt-get来安装vsftpd\n```\nsudo apt-get install vsftpd\n```\n其配置文件在\n```\n/etc/vsftpd.conf\n```\n根据实际环境需要修改配置文件：\n```\n#log_ftp_protocol=YES\nlisten=YES\nlisten_port=3001 # ftp登陆端口\nftp_data_port=3000 # 主动模式数据端口\nport_enable=YES\nport_promiscuous=YES\npasv_enable=YES\npasv_address=  # 此处填被动模式所需的外网IP\npasv_addr_resolve=yes\npasv_promiscuous=YES\ndelete_failed_uploads=YES\n#listen_ipv6=YES\n# Allow anonymous FTP? (Disabled by default)\nanonymous_enable=NO\n# Uncomment this to allow local users to log in.\nlocal_enable=YES\n# Uncomment this to enable any form of FTP write command.\nwrite_enable=YES\n# Default umask for local users is 077. You may wish to change this to 022,\n# if your users expect that (022 is used by most other ftpd's)\nlocal_umask=022\n#file_open_mode=0755\n#pasv_enable=NO\n# Uncomment this to allow the anonymous FTP user to upload files. This only\n# has an effect if the above global write enable is activated. Also, you will\n# obviously need to create a directory writable by the FTP user.\nanon_upload_enable=NO\n# Uncomment this if you want the anonymous FTP user to be able to create\n# new directories.\nanon_mkdir_write_enable=NO\n# Activate directory messages - messages given to remote users when they\n# go into a certain directory.\ndirmessage_enable=YES\n# If enabled, vsftpd will display directory listings with the time\n# in  your  local  time  zone.  The default is to display GMT. The\n# times returned by the MDTM FTP command are also affected by this\n# option.\n#use_localtime=YES\nsyslog_enable=YES\n# Activate logging of uploads/downloads.\nxferlog_enable=YES\n# Make sure PORT transfer connections originate from port 20 (ftp-data).\nconnect_from_port_20=YES\n# If you want, you can arrange for uploaded anonymous files to be owned by\n# a different user. Note! Using \"root\" for uploaded files is not\n# recommended!\n#chown_uploads=YES\n#chown_username=whoever\n# You may override where the log file goes if you like. The default is shown\n# below.\nxferlog_file=/var/log/xferlog.log\n# If you want, you can have your log file in standard ftpd xferlog format.\n# Note that the default log file location is /var/log/xferlog in this case.\nxferlog_std_format=YES\ndual_log_enable=YES\nvsftpd_log_file=/var/log/vsftpd.log\n# You may change the default value for timing out an idle session.\n#idle_session_timeout=600\n# You may change the default value for timing out a data connection.\n#data_connection_timeout=120  # 数据连接超时\n# It is recommended that you define on your system a unique user which the\n# ftp server can use as a totally isolated and unprivileged user.\n#nopriv_user=ftpsecure\n# Enable this and the server will recognise asynchronous ABOR requests. Not\n# recommended for security (the code is non-trivial). Not enabling it,\n# however, may confuse older FTP clients.\n#async_abor_enable=YES\n# By default the server will pretend to allow ASCII mode but in fact ignore\n# the request. Turn on the below options to have the server actually do ASCII\n# mangling on files when in ASCII mode.\n# Beware that on some FTP servers, ASCII support allows a denial of service\n# attack (DoS) via the command \"SIZE /big/file\" in ASCII mode. vsftpd\n# predicted this attack and has always been safe, reporting the size of the\n# raw file.\n# ASCII mangling is a horrible feature of the protocol.\nascii_upload_enable=YES\nascii_download_enable=YES\n# You may fully customise the login banner string:\n#ftpd_banner=Welcome to blah FTP service.\n# You may specify a file of disallowed anonymous e-mail addresses. Apparently\n# useful for combatting certain DoS attacks.\n#deny_email_enable=YES\n# (default follows)\n#banned_email_file=/etc/vsftpd.banned_emails\n# You may restrict local users to their home directories.  See the FAQ for\n# the possible risks in this before using chroot_local_user or\n# chroot_list_enable below.\n#chroot_local_user=YES\n# You may specify an explicit list of local users to chroot() to their home\n# directory. If chroot_local_user is YES, then this list becomes a list of\n# users to NOT chroot().\n# (Warning! chroot'ing can be very dangerous. If using chroot, make sure that\n# the user does not have write access to the top level directory within the\n# chroot)\nchroot_local_user=YES\nallow_writeable_chroot=YES\nchroot_list_enable=YES \n# (default follows)\nchroot_list_file=/etc/vsftpd.chroot_list \n#chroot_list_enable=YES chroot_local_user=YES\n#1.所有用户都被限制在其主目录下 2.使用chroot_list_file指定的用户列表，这些用户作为“例外”，不受限制\n#chroot_list_enable=YES chroot_local_user=NO\n#1.所有用户都不被限制其主目录下 2.使用chroot_list_file指定的用户列表，这些用户作为“例外”，受到限制\n#chroot_list_enable=NO chroot_local_user=YES\n#1.所有用户都被限制在其主目录下 2.不使用chroot_list_file指定的用户列表，没有任何“例外”用户\n#chroot_list_enable=NO chroot_local_user=NO\n#1.所有用户都不被限制其主目录下 2.不使用chroot_list_file指定的用户列表，没有任何“例外”用户\n# You may activate the \"-R\" option to the builtin ls. This is disabled by\n# default to avoid remote users being able to cause excessive I/O on large\n# sites. However, some broken FTP clients such as \"ncftp\" and \"mirror\" assume\n# the presence of the \"-R\" option, so there is a strong case for enabling it.\n#ls_recurse_enable=YES\n# This option should be the name of a directory which is empty.  Also, the\n# directory should not be writable by the ftp user. This directory is used\n# as a secure chroot() jail at times vsftpd does not require filesystem\n# access.\nsecure_chroot_dir=/var/run/vsftpd/empty\n# This string is the name of the PAM service vsftpd will use.\npam_service_name=vsftpd\n# This option specifies the location of the RSA certificate to use for SSL\n# encrypted connections.\n#rsa_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem\n# This option specifies the location of the RSA key to use for SSL\n# encrypted connections.\n#local_root=/home/uftp\n#rsa_private_key_file=/etc/ssl/private/ssl-cert-snakeoil.key\nuserlist_deny=NO\nuserlist_enable=YES\nuserlist_file=/etc/allowed_users \n# 当且仅当userlist_enable=YES时：userlist_deny项的配置才有效，user_list文件才会被使用；当其为NO时，无论userlist_deny项为何值都是无效的，本地全体用户（除去ftpusers中的用户）都可以登入FTP\n# 当userlist_enable=YES时，userlist_deny=YES时：user_list是一个黑名单，即：所有出现在名单中的用户都会被拒绝登入；\n# 当userlist_enable=YES时，userlist_deny=NO时：user_list是一个白名单，即：只有出现在名单中的用户才会被准许登入(user_list之外的用户都被拒绝登入)；另外需要特别提醒的是：使用白名单后，匿名用户将无法登入！除非显式在user_list中加入一行：anonymous\nseccomp_sandbox=NO\n# ssl config\nssl_enable=YES\nallow_anon_ssl=NO\nforce_local_data_ssl=NO\nforce_local_logins_ssl=NO\nforce_anon_logins_ssl=NO\nforce_anon_data_ssl=NO\nssl_tlsv1=YES\nssl_sslv2=YES\nssl_sslv3=YES\nrequire_ssl_reuse=NO\ndebug_ssl=YES\nstrict_ssl_read_eof=YES\nstrict_ssl_write_shutdown=YES\nssl_ciphers=HIGH\nrsa_cert_file=/etc/ssl/certs/vsftpd.pem\nrsa_private_key_file=/etc/ssl/certs/vsftpd.pem\npasv_max_port=31000\npasv_min_port=30000\ndata_connection_timeout=8\n```\n/etc/vsftpd.chroot_list 中加入root用户作为例外，可以不被限制在主目录下\n/etc/allow_users 中加入允许登陆的用户\n## 2. 创建用户\n```shell\nuseradd -d /home/temp temp\npasswd temp\nusermod -s /usr/sbin/nologin temp\n```\n添加用户temp，用户根目录/home/temp，设置密码，设置权限为/usr/sbin/nologin,禁止登陆，此处需要注意不同系统nologin的目录不同。\n\n","source":"_posts/vsftpd安装与配置.md","raw":"---\ntitle: vsftpd安装与配置\ndate: 2019-05-22 16:18:06\ncategories: 技术\ncover: https://i.loli.net/2020/01/28/roVXBWijJgpv3Md.jpg\ntags: [linux,vsftpd]\n---\nvsftpd 是“very secure FTP daemon”的缩写，安全性是它的一个最大的特点。vsftpd 是一个 UNIX 类操作系统上运行的服务器的名字，它可以运行在诸如 Linux、BSD、Solaris、 HP-UNIX等系统上面，是一个完全免费的、开放源代码的ftp服务器软件，支持很多其他的 FTP 服务器所不支持的特征。比如：非常高的安全性需求、带宽限制、良好的可伸缩性、可创建虚拟用户、支持IPv6、速率高等。\n<!-- more --> \n## 1. 安装vsftpd\n对于ubuntu系统可以很容易的通过apt-get来安装vsftpd\n```\nsudo apt-get install vsftpd\n```\n其配置文件在\n```\n/etc/vsftpd.conf\n```\n根据实际环境需要修改配置文件：\n```\n#log_ftp_protocol=YES\nlisten=YES\nlisten_port=3001 # ftp登陆端口\nftp_data_port=3000 # 主动模式数据端口\nport_enable=YES\nport_promiscuous=YES\npasv_enable=YES\npasv_address=  # 此处填被动模式所需的外网IP\npasv_addr_resolve=yes\npasv_promiscuous=YES\ndelete_failed_uploads=YES\n#listen_ipv6=YES\n# Allow anonymous FTP? (Disabled by default)\nanonymous_enable=NO\n# Uncomment this to allow local users to log in.\nlocal_enable=YES\n# Uncomment this to enable any form of FTP write command.\nwrite_enable=YES\n# Default umask for local users is 077. You may wish to change this to 022,\n# if your users expect that (022 is used by most other ftpd's)\nlocal_umask=022\n#file_open_mode=0755\n#pasv_enable=NO\n# Uncomment this to allow the anonymous FTP user to upload files. This only\n# has an effect if the above global write enable is activated. Also, you will\n# obviously need to create a directory writable by the FTP user.\nanon_upload_enable=NO\n# Uncomment this if you want the anonymous FTP user to be able to create\n# new directories.\nanon_mkdir_write_enable=NO\n# Activate directory messages - messages given to remote users when they\n# go into a certain directory.\ndirmessage_enable=YES\n# If enabled, vsftpd will display directory listings with the time\n# in  your  local  time  zone.  The default is to display GMT. The\n# times returned by the MDTM FTP command are also affected by this\n# option.\n#use_localtime=YES\nsyslog_enable=YES\n# Activate logging of uploads/downloads.\nxferlog_enable=YES\n# Make sure PORT transfer connections originate from port 20 (ftp-data).\nconnect_from_port_20=YES\n# If you want, you can arrange for uploaded anonymous files to be owned by\n# a different user. Note! Using \"root\" for uploaded files is not\n# recommended!\n#chown_uploads=YES\n#chown_username=whoever\n# You may override where the log file goes if you like. The default is shown\n# below.\nxferlog_file=/var/log/xferlog.log\n# If you want, you can have your log file in standard ftpd xferlog format.\n# Note that the default log file location is /var/log/xferlog in this case.\nxferlog_std_format=YES\ndual_log_enable=YES\nvsftpd_log_file=/var/log/vsftpd.log\n# You may change the default value for timing out an idle session.\n#idle_session_timeout=600\n# You may change the default value for timing out a data connection.\n#data_connection_timeout=120  # 数据连接超时\n# It is recommended that you define on your system a unique user which the\n# ftp server can use as a totally isolated and unprivileged user.\n#nopriv_user=ftpsecure\n# Enable this and the server will recognise asynchronous ABOR requests. Not\n# recommended for security (the code is non-trivial). Not enabling it,\n# however, may confuse older FTP clients.\n#async_abor_enable=YES\n# By default the server will pretend to allow ASCII mode but in fact ignore\n# the request. Turn on the below options to have the server actually do ASCII\n# mangling on files when in ASCII mode.\n# Beware that on some FTP servers, ASCII support allows a denial of service\n# attack (DoS) via the command \"SIZE /big/file\" in ASCII mode. vsftpd\n# predicted this attack and has always been safe, reporting the size of the\n# raw file.\n# ASCII mangling is a horrible feature of the protocol.\nascii_upload_enable=YES\nascii_download_enable=YES\n# You may fully customise the login banner string:\n#ftpd_banner=Welcome to blah FTP service.\n# You may specify a file of disallowed anonymous e-mail addresses. Apparently\n# useful for combatting certain DoS attacks.\n#deny_email_enable=YES\n# (default follows)\n#banned_email_file=/etc/vsftpd.banned_emails\n# You may restrict local users to their home directories.  See the FAQ for\n# the possible risks in this before using chroot_local_user or\n# chroot_list_enable below.\n#chroot_local_user=YES\n# You may specify an explicit list of local users to chroot() to their home\n# directory. If chroot_local_user is YES, then this list becomes a list of\n# users to NOT chroot().\n# (Warning! chroot'ing can be very dangerous. If using chroot, make sure that\n# the user does not have write access to the top level directory within the\n# chroot)\nchroot_local_user=YES\nallow_writeable_chroot=YES\nchroot_list_enable=YES \n# (default follows)\nchroot_list_file=/etc/vsftpd.chroot_list \n#chroot_list_enable=YES chroot_local_user=YES\n#1.所有用户都被限制在其主目录下 2.使用chroot_list_file指定的用户列表，这些用户作为“例外”，不受限制\n#chroot_list_enable=YES chroot_local_user=NO\n#1.所有用户都不被限制其主目录下 2.使用chroot_list_file指定的用户列表，这些用户作为“例外”，受到限制\n#chroot_list_enable=NO chroot_local_user=YES\n#1.所有用户都被限制在其主目录下 2.不使用chroot_list_file指定的用户列表，没有任何“例外”用户\n#chroot_list_enable=NO chroot_local_user=NO\n#1.所有用户都不被限制其主目录下 2.不使用chroot_list_file指定的用户列表，没有任何“例外”用户\n# You may activate the \"-R\" option to the builtin ls. This is disabled by\n# default to avoid remote users being able to cause excessive I/O on large\n# sites. However, some broken FTP clients such as \"ncftp\" and \"mirror\" assume\n# the presence of the \"-R\" option, so there is a strong case for enabling it.\n#ls_recurse_enable=YES\n# This option should be the name of a directory which is empty.  Also, the\n# directory should not be writable by the ftp user. This directory is used\n# as a secure chroot() jail at times vsftpd does not require filesystem\n# access.\nsecure_chroot_dir=/var/run/vsftpd/empty\n# This string is the name of the PAM service vsftpd will use.\npam_service_name=vsftpd\n# This option specifies the location of the RSA certificate to use for SSL\n# encrypted connections.\n#rsa_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem\n# This option specifies the location of the RSA key to use for SSL\n# encrypted connections.\n#local_root=/home/uftp\n#rsa_private_key_file=/etc/ssl/private/ssl-cert-snakeoil.key\nuserlist_deny=NO\nuserlist_enable=YES\nuserlist_file=/etc/allowed_users \n# 当且仅当userlist_enable=YES时：userlist_deny项的配置才有效，user_list文件才会被使用；当其为NO时，无论userlist_deny项为何值都是无效的，本地全体用户（除去ftpusers中的用户）都可以登入FTP\n# 当userlist_enable=YES时，userlist_deny=YES时：user_list是一个黑名单，即：所有出现在名单中的用户都会被拒绝登入；\n# 当userlist_enable=YES时，userlist_deny=NO时：user_list是一个白名单，即：只有出现在名单中的用户才会被准许登入(user_list之外的用户都被拒绝登入)；另外需要特别提醒的是：使用白名单后，匿名用户将无法登入！除非显式在user_list中加入一行：anonymous\nseccomp_sandbox=NO\n# ssl config\nssl_enable=YES\nallow_anon_ssl=NO\nforce_local_data_ssl=NO\nforce_local_logins_ssl=NO\nforce_anon_logins_ssl=NO\nforce_anon_data_ssl=NO\nssl_tlsv1=YES\nssl_sslv2=YES\nssl_sslv3=YES\nrequire_ssl_reuse=NO\ndebug_ssl=YES\nstrict_ssl_read_eof=YES\nstrict_ssl_write_shutdown=YES\nssl_ciphers=HIGH\nrsa_cert_file=/etc/ssl/certs/vsftpd.pem\nrsa_private_key_file=/etc/ssl/certs/vsftpd.pem\npasv_max_port=31000\npasv_min_port=30000\ndata_connection_timeout=8\n```\n/etc/vsftpd.chroot_list 中加入root用户作为例外，可以不被限制在主目录下\n/etc/allow_users 中加入允许登陆的用户\n## 2. 创建用户\n```shell\nuseradd -d /home/temp temp\npasswd temp\nusermod -s /usr/sbin/nologin temp\n```\n添加用户temp，用户根目录/home/temp，设置密码，设置权限为/usr/sbin/nologin,禁止登陆，此处需要注意不同系统nologin的目录不同。\n\n","slug":"vsftpd安装与配置","published":1,"updated":"2020-01-28T11:58:42.936Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck5xvtii90005vwudhvtf0v3g","content":"<p>vsftpd 是“very secure FTP daemon”的缩写，安全性是它的一个最大的特点。vsftpd 是一个 UNIX 类操作系统上运行的服务器的名字，它可以运行在诸如 Linux、BSD、Solaris、 HP-UNIX等系统上面，是一个完全免费的、开放源代码的ftp服务器软件，支持很多其他的 FTP 服务器所不支持的特征。比如：非常高的安全性需求、带宽限制、良好的可伸缩性、可创建虚拟用户、支持IPv6、速率高等。</p>\n<a id=\"more\"></a> \n<h2 id=\"1-安装vsftpd\"><a href=\"#1-安装vsftpd\" class=\"headerlink\" title=\"1. 安装vsftpd\"></a>1. 安装vsftpd</h2><p>对于ubuntu系统可以很容易的通过apt-get来安装vsftpd</p>\n<pre><code>sudo apt-get install vsftpd</code></pre><p>其配置文件在</p>\n<pre><code>/etc/vsftpd.conf</code></pre><p>根据实际环境需要修改配置文件：</p>\n<pre><code>#log_ftp_protocol=YES\nlisten=YES\nlisten_port=3001 # ftp登陆端口\nftp_data_port=3000 # 主动模式数据端口\nport_enable=YES\nport_promiscuous=YES\npasv_enable=YES\npasv_address=  # 此处填被动模式所需的外网IP\npasv_addr_resolve=yes\npasv_promiscuous=YES\ndelete_failed_uploads=YES\n#listen_ipv6=YES\n# Allow anonymous FTP? (Disabled by default)\nanonymous_enable=NO\n# Uncomment this to allow local users to log in.\nlocal_enable=YES\n# Uncomment this to enable any form of FTP write command.\nwrite_enable=YES\n# Default umask for local users is 077. You may wish to change this to 022,\n# if your users expect that (022 is used by most other ftpd&#39;s)\nlocal_umask=022\n#file_open_mode=0755\n#pasv_enable=NO\n# Uncomment this to allow the anonymous FTP user to upload files. This only\n# has an effect if the above global write enable is activated. Also, you will\n# obviously need to create a directory writable by the FTP user.\nanon_upload_enable=NO\n# Uncomment this if you want the anonymous FTP user to be able to create\n# new directories.\nanon_mkdir_write_enable=NO\n# Activate directory messages - messages given to remote users when they\n# go into a certain directory.\ndirmessage_enable=YES\n# If enabled, vsftpd will display directory listings with the time\n# in  your  local  time  zone.  The default is to display GMT. The\n# times returned by the MDTM FTP command are also affected by this\n# option.\n#use_localtime=YES\nsyslog_enable=YES\n# Activate logging of uploads/downloads.\nxferlog_enable=YES\n# Make sure PORT transfer connections originate from port 20 (ftp-data).\nconnect_from_port_20=YES\n# If you want, you can arrange for uploaded anonymous files to be owned by\n# a different user. Note! Using &quot;root&quot; for uploaded files is not\n# recommended!\n#chown_uploads=YES\n#chown_username=whoever\n# You may override where the log file goes if you like. The default is shown\n# below.\nxferlog_file=/var/log/xferlog.log\n# If you want, you can have your log file in standard ftpd xferlog format.\n# Note that the default log file location is /var/log/xferlog in this case.\nxferlog_std_format=YES\ndual_log_enable=YES\nvsftpd_log_file=/var/log/vsftpd.log\n# You may change the default value for timing out an idle session.\n#idle_session_timeout=600\n# You may change the default value for timing out a data connection.\n#data_connection_timeout=120  # 数据连接超时\n# It is recommended that you define on your system a unique user which the\n# ftp server can use as a totally isolated and unprivileged user.\n#nopriv_user=ftpsecure\n# Enable this and the server will recognise asynchronous ABOR requests. Not\n# recommended for security (the code is non-trivial). Not enabling it,\n# however, may confuse older FTP clients.\n#async_abor_enable=YES\n# By default the server will pretend to allow ASCII mode but in fact ignore\n# the request. Turn on the below options to have the server actually do ASCII\n# mangling on files when in ASCII mode.\n# Beware that on some FTP servers, ASCII support allows a denial of service\n# attack (DoS) via the command &quot;SIZE /big/file&quot; in ASCII mode. vsftpd\n# predicted this attack and has always been safe, reporting the size of the\n# raw file.\n# ASCII mangling is a horrible feature of the protocol.\nascii_upload_enable=YES\nascii_download_enable=YES\n# You may fully customise the login banner string:\n#ftpd_banner=Welcome to blah FTP service.\n# You may specify a file of disallowed anonymous e-mail addresses. Apparently\n# useful for combatting certain DoS attacks.\n#deny_email_enable=YES\n# (default follows)\n#banned_email_file=/etc/vsftpd.banned_emails\n# You may restrict local users to their home directories.  See the FAQ for\n# the possible risks in this before using chroot_local_user or\n# chroot_list_enable below.\n#chroot_local_user=YES\n# You may specify an explicit list of local users to chroot() to their home\n# directory. If chroot_local_user is YES, then this list becomes a list of\n# users to NOT chroot().\n# (Warning! chroot&#39;ing can be very dangerous. If using chroot, make sure that\n# the user does not have write access to the top level directory within the\n# chroot)\nchroot_local_user=YES\nallow_writeable_chroot=YES\nchroot_list_enable=YES \n# (default follows)\nchroot_list_file=/etc/vsftpd.chroot_list \n#chroot_list_enable=YES chroot_local_user=YES\n#1.所有用户都被限制在其主目录下 2.使用chroot_list_file指定的用户列表，这些用户作为“例外”，不受限制\n#chroot_list_enable=YES chroot_local_user=NO\n#1.所有用户都不被限制其主目录下 2.使用chroot_list_file指定的用户列表，这些用户作为“例外”，受到限制\n#chroot_list_enable=NO chroot_local_user=YES\n#1.所有用户都被限制在其主目录下 2.不使用chroot_list_file指定的用户列表，没有任何“例外”用户\n#chroot_list_enable=NO chroot_local_user=NO\n#1.所有用户都不被限制其主目录下 2.不使用chroot_list_file指定的用户列表，没有任何“例外”用户\n# You may activate the &quot;-R&quot; option to the builtin ls. This is disabled by\n# default to avoid remote users being able to cause excessive I/O on large\n# sites. However, some broken FTP clients such as &quot;ncftp&quot; and &quot;mirror&quot; assume\n# the presence of the &quot;-R&quot; option, so there is a strong case for enabling it.\n#ls_recurse_enable=YES\n# This option should be the name of a directory which is empty.  Also, the\n# directory should not be writable by the ftp user. This directory is used\n# as a secure chroot() jail at times vsftpd does not require filesystem\n# access.\nsecure_chroot_dir=/var/run/vsftpd/empty\n# This string is the name of the PAM service vsftpd will use.\npam_service_name=vsftpd\n# This option specifies the location of the RSA certificate to use for SSL\n# encrypted connections.\n#rsa_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem\n# This option specifies the location of the RSA key to use for SSL\n# encrypted connections.\n#local_root=/home/uftp\n#rsa_private_key_file=/etc/ssl/private/ssl-cert-snakeoil.key\nuserlist_deny=NO\nuserlist_enable=YES\nuserlist_file=/etc/allowed_users \n# 当且仅当userlist_enable=YES时：userlist_deny项的配置才有效，user_list文件才会被使用；当其为NO时，无论userlist_deny项为何值都是无效的，本地全体用户（除去ftpusers中的用户）都可以登入FTP\n# 当userlist_enable=YES时，userlist_deny=YES时：user_list是一个黑名单，即：所有出现在名单中的用户都会被拒绝登入；\n# 当userlist_enable=YES时，userlist_deny=NO时：user_list是一个白名单，即：只有出现在名单中的用户才会被准许登入(user_list之外的用户都被拒绝登入)；另外需要特别提醒的是：使用白名单后，匿名用户将无法登入！除非显式在user_list中加入一行：anonymous\nseccomp_sandbox=NO\n# ssl config\nssl_enable=YES\nallow_anon_ssl=NO\nforce_local_data_ssl=NO\nforce_local_logins_ssl=NO\nforce_anon_logins_ssl=NO\nforce_anon_data_ssl=NO\nssl_tlsv1=YES\nssl_sslv2=YES\nssl_sslv3=YES\nrequire_ssl_reuse=NO\ndebug_ssl=YES\nstrict_ssl_read_eof=YES\nstrict_ssl_write_shutdown=YES\nssl_ciphers=HIGH\nrsa_cert_file=/etc/ssl/certs/vsftpd.pem\nrsa_private_key_file=/etc/ssl/certs/vsftpd.pem\npasv_max_port=31000\npasv_min_port=30000\ndata_connection_timeout=8</code></pre><p>/etc/vsftpd.chroot_list 中加入root用户作为例外，可以不被限制在主目录下<br>/etc/allow_users 中加入允许登陆的用户</p>\n<h2 id=\"2-创建用户\"><a href=\"#2-创建用户\" class=\"headerlink\" title=\"2. 创建用户\"></a>2. 创建用户</h2><pre><code class=\"shell\">useradd -d /home/temp temp\npasswd temp\nusermod -s /usr/sbin/nologin temp</code></pre>\n<p>添加用户temp，用户根目录/home/temp，设置密码，设置权限为/usr/sbin/nologin,禁止登陆，此处需要注意不同系统nologin的目录不同。</p>\n","site":{"data":{}},"excerpt":"<p>vsftpd 是“very secure FTP daemon”的缩写，安全性是它的一个最大的特点。vsftpd 是一个 UNIX 类操作系统上运行的服务器的名字，它可以运行在诸如 Linux、BSD、Solaris、 HP-UNIX等系统上面，是一个完全免费的、开放源代码的ftp服务器软件，支持很多其他的 FTP 服务器所不支持的特征。比如：非常高的安全性需求、带宽限制、良好的可伸缩性、可创建虚拟用户、支持IPv6、速率高等。</p>","more":"<h2 id=\"1-安装vsftpd\"><a href=\"#1-安装vsftpd\" class=\"headerlink\" title=\"1. 安装vsftpd\"></a>1. 安装vsftpd</h2><p>对于ubuntu系统可以很容易的通过apt-get来安装vsftpd</p>\n<pre><code>sudo apt-get install vsftpd</code></pre><p>其配置文件在</p>\n<pre><code>/etc/vsftpd.conf</code></pre><p>根据实际环境需要修改配置文件：</p>\n<pre><code>#log_ftp_protocol=YES\nlisten=YES\nlisten_port=3001 # ftp登陆端口\nftp_data_port=3000 # 主动模式数据端口\nport_enable=YES\nport_promiscuous=YES\npasv_enable=YES\npasv_address=  # 此处填被动模式所需的外网IP\npasv_addr_resolve=yes\npasv_promiscuous=YES\ndelete_failed_uploads=YES\n#listen_ipv6=YES\n# Allow anonymous FTP? (Disabled by default)\nanonymous_enable=NO\n# Uncomment this to allow local users to log in.\nlocal_enable=YES\n# Uncomment this to enable any form of FTP write command.\nwrite_enable=YES\n# Default umask for local users is 077. You may wish to change this to 022,\n# if your users expect that (022 is used by most other ftpd&#39;s)\nlocal_umask=022\n#file_open_mode=0755\n#pasv_enable=NO\n# Uncomment this to allow the anonymous FTP user to upload files. This only\n# has an effect if the above global write enable is activated. Also, you will\n# obviously need to create a directory writable by the FTP user.\nanon_upload_enable=NO\n# Uncomment this if you want the anonymous FTP user to be able to create\n# new directories.\nanon_mkdir_write_enable=NO\n# Activate directory messages - messages given to remote users when they\n# go into a certain directory.\ndirmessage_enable=YES\n# If enabled, vsftpd will display directory listings with the time\n# in  your  local  time  zone.  The default is to display GMT. The\n# times returned by the MDTM FTP command are also affected by this\n# option.\n#use_localtime=YES\nsyslog_enable=YES\n# Activate logging of uploads/downloads.\nxferlog_enable=YES\n# Make sure PORT transfer connections originate from port 20 (ftp-data).\nconnect_from_port_20=YES\n# If you want, you can arrange for uploaded anonymous files to be owned by\n# a different user. Note! Using &quot;root&quot; for uploaded files is not\n# recommended!\n#chown_uploads=YES\n#chown_username=whoever\n# You may override where the log file goes if you like. The default is shown\n# below.\nxferlog_file=/var/log/xferlog.log\n# If you want, you can have your log file in standard ftpd xferlog format.\n# Note that the default log file location is /var/log/xferlog in this case.\nxferlog_std_format=YES\ndual_log_enable=YES\nvsftpd_log_file=/var/log/vsftpd.log\n# You may change the default value for timing out an idle session.\n#idle_session_timeout=600\n# You may change the default value for timing out a data connection.\n#data_connection_timeout=120  # 数据连接超时\n# It is recommended that you define on your system a unique user which the\n# ftp server can use as a totally isolated and unprivileged user.\n#nopriv_user=ftpsecure\n# Enable this and the server will recognise asynchronous ABOR requests. Not\n# recommended for security (the code is non-trivial). Not enabling it,\n# however, may confuse older FTP clients.\n#async_abor_enable=YES\n# By default the server will pretend to allow ASCII mode but in fact ignore\n# the request. Turn on the below options to have the server actually do ASCII\n# mangling on files when in ASCII mode.\n# Beware that on some FTP servers, ASCII support allows a denial of service\n# attack (DoS) via the command &quot;SIZE /big/file&quot; in ASCII mode. vsftpd\n# predicted this attack and has always been safe, reporting the size of the\n# raw file.\n# ASCII mangling is a horrible feature of the protocol.\nascii_upload_enable=YES\nascii_download_enable=YES\n# You may fully customise the login banner string:\n#ftpd_banner=Welcome to blah FTP service.\n# You may specify a file of disallowed anonymous e-mail addresses. Apparently\n# useful for combatting certain DoS attacks.\n#deny_email_enable=YES\n# (default follows)\n#banned_email_file=/etc/vsftpd.banned_emails\n# You may restrict local users to their home directories.  See the FAQ for\n# the possible risks in this before using chroot_local_user or\n# chroot_list_enable below.\n#chroot_local_user=YES\n# You may specify an explicit list of local users to chroot() to their home\n# directory. If chroot_local_user is YES, then this list becomes a list of\n# users to NOT chroot().\n# (Warning! chroot&#39;ing can be very dangerous. If using chroot, make sure that\n# the user does not have write access to the top level directory within the\n# chroot)\nchroot_local_user=YES\nallow_writeable_chroot=YES\nchroot_list_enable=YES \n# (default follows)\nchroot_list_file=/etc/vsftpd.chroot_list \n#chroot_list_enable=YES chroot_local_user=YES\n#1.所有用户都被限制在其主目录下 2.使用chroot_list_file指定的用户列表，这些用户作为“例外”，不受限制\n#chroot_list_enable=YES chroot_local_user=NO\n#1.所有用户都不被限制其主目录下 2.使用chroot_list_file指定的用户列表，这些用户作为“例外”，受到限制\n#chroot_list_enable=NO chroot_local_user=YES\n#1.所有用户都被限制在其主目录下 2.不使用chroot_list_file指定的用户列表，没有任何“例外”用户\n#chroot_list_enable=NO chroot_local_user=NO\n#1.所有用户都不被限制其主目录下 2.不使用chroot_list_file指定的用户列表，没有任何“例外”用户\n# You may activate the &quot;-R&quot; option to the builtin ls. This is disabled by\n# default to avoid remote users being able to cause excessive I/O on large\n# sites. However, some broken FTP clients such as &quot;ncftp&quot; and &quot;mirror&quot; assume\n# the presence of the &quot;-R&quot; option, so there is a strong case for enabling it.\n#ls_recurse_enable=YES\n# This option should be the name of a directory which is empty.  Also, the\n# directory should not be writable by the ftp user. This directory is used\n# as a secure chroot() jail at times vsftpd does not require filesystem\n# access.\nsecure_chroot_dir=/var/run/vsftpd/empty\n# This string is the name of the PAM service vsftpd will use.\npam_service_name=vsftpd\n# This option specifies the location of the RSA certificate to use for SSL\n# encrypted connections.\n#rsa_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem\n# This option specifies the location of the RSA key to use for SSL\n# encrypted connections.\n#local_root=/home/uftp\n#rsa_private_key_file=/etc/ssl/private/ssl-cert-snakeoil.key\nuserlist_deny=NO\nuserlist_enable=YES\nuserlist_file=/etc/allowed_users \n# 当且仅当userlist_enable=YES时：userlist_deny项的配置才有效，user_list文件才会被使用；当其为NO时，无论userlist_deny项为何值都是无效的，本地全体用户（除去ftpusers中的用户）都可以登入FTP\n# 当userlist_enable=YES时，userlist_deny=YES时：user_list是一个黑名单，即：所有出现在名单中的用户都会被拒绝登入；\n# 当userlist_enable=YES时，userlist_deny=NO时：user_list是一个白名单，即：只有出现在名单中的用户才会被准许登入(user_list之外的用户都被拒绝登入)；另外需要特别提醒的是：使用白名单后，匿名用户将无法登入！除非显式在user_list中加入一行：anonymous\nseccomp_sandbox=NO\n# ssl config\nssl_enable=YES\nallow_anon_ssl=NO\nforce_local_data_ssl=NO\nforce_local_logins_ssl=NO\nforce_anon_logins_ssl=NO\nforce_anon_data_ssl=NO\nssl_tlsv1=YES\nssl_sslv2=YES\nssl_sslv3=YES\nrequire_ssl_reuse=NO\ndebug_ssl=YES\nstrict_ssl_read_eof=YES\nstrict_ssl_write_shutdown=YES\nssl_ciphers=HIGH\nrsa_cert_file=/etc/ssl/certs/vsftpd.pem\nrsa_private_key_file=/etc/ssl/certs/vsftpd.pem\npasv_max_port=31000\npasv_min_port=30000\ndata_connection_timeout=8</code></pre><p>/etc/vsftpd.chroot_list 中加入root用户作为例外，可以不被限制在主目录下<br>/etc/allow_users 中加入允许登陆的用户</p>\n<h2 id=\"2-创建用户\"><a href=\"#2-创建用户\" class=\"headerlink\" title=\"2. 创建用户\"></a>2. 创建用户</h2><pre><code class=\"shell\">useradd -d /home/temp temp\npasswd temp\nusermod -s /usr/sbin/nologin temp</code></pre>\n<p>添加用户temp，用户根目录/home/temp，设置密码，设置权限为/usr/sbin/nologin,禁止登陆，此处需要注意不同系统nologin的目录不同。</p>"},{"title":"使用caddy作为HTTPS服务器","date":"2019-05-22T08:18:06.000Z","cover":"https://i.loli.net/2020/01/28/7zdcqnKFT5CRjku.jpg","_content":"用Caddy的插件forwardproxy可以快速搭建HTTPS服务器，可以不用手动配置ssl证书\n<!-- more --> \n## 1. 安装Caddy和Caddy插件forwardproxy\n```\ncurl https://getcaddy.com | bash -s personal http.forwardproxy\n```\n已经安装过Caddy的也可以使用上述命令，升级Caddy（如果有新版本），并安装插件forwardproxy，随后重启Caddy即可。\n```\nservice caddy restart\nOR\nsystemctl restart caddy.service\n```\n## 2. 配置caddy\n### 1. 创建配置文件放到 /etc/caddy 目录\n```\nsudo mkdir /etc/caddy\nsudo touch /etc/caddy/Caddyfile\nsudo chown -R root:www-data /etc/caddy\n```\n### 2. 配置ssl证书目录\n```\nsudo mkdir /etc/ssl/caddy\nsudo chown -R www-data:root /etc/ssl/caddy\nsudo chmod 0770 /etc/ssl/caddy\n```\n### 3. 配置 systemd\n```\nsudo curl -s  https://raw.githubusercontent.com/mholt/caddy/master/dist/init/linux-systemd/caddy.service  -o /etc/systemd/system/caddy.service\nsudo systemctl daemon-reload\nsudo systemctl enable caddy.service\nsudo systemctl status caddy.service\n```\n### 4. 配置Caddfile配置文件\n```\n域名 {\n    root /data/wwwroot/default\n    tls justforjoy7@gmail.com\n    log stdout \n    forwardproxy {\n        ports 80 443\n        #basicauth user pass\n        hide_ip\n        hide_via\n    }\n}\n```\n为了掩饰站点，可以在例如/data/wwwroot/default网站目录下放些东西。\n### 5. 通过systemd管理caddy\n```\nsudo systemctl start caddy.service\nsudo systemctl stop caddy.service\nsudo systemctl restart caddy.service\nsudo systemctl reload caddy.service\n```","source":"_posts/使用caddy作为HTTPS服务器.md","raw":"---\ntitle: 使用caddy作为HTTPS服务器\ndate: 2019-05-22 16:18:06\ncategories: 技术\ncover: https://i.loli.net/2020/01/28/7zdcqnKFT5CRjku.jpg\ntags: [linux,caddy,https]\n---\n用Caddy的插件forwardproxy可以快速搭建HTTPS服务器，可以不用手动配置ssl证书\n<!-- more --> \n## 1. 安装Caddy和Caddy插件forwardproxy\n```\ncurl https://getcaddy.com | bash -s personal http.forwardproxy\n```\n已经安装过Caddy的也可以使用上述命令，升级Caddy（如果有新版本），并安装插件forwardproxy，随后重启Caddy即可。\n```\nservice caddy restart\nOR\nsystemctl restart caddy.service\n```\n## 2. 配置caddy\n### 1. 创建配置文件放到 /etc/caddy 目录\n```\nsudo mkdir /etc/caddy\nsudo touch /etc/caddy/Caddyfile\nsudo chown -R root:www-data /etc/caddy\n```\n### 2. 配置ssl证书目录\n```\nsudo mkdir /etc/ssl/caddy\nsudo chown -R www-data:root /etc/ssl/caddy\nsudo chmod 0770 /etc/ssl/caddy\n```\n### 3. 配置 systemd\n```\nsudo curl -s  https://raw.githubusercontent.com/mholt/caddy/master/dist/init/linux-systemd/caddy.service  -o /etc/systemd/system/caddy.service\nsudo systemctl daemon-reload\nsudo systemctl enable caddy.service\nsudo systemctl status caddy.service\n```\n### 4. 配置Caddfile配置文件\n```\n域名 {\n    root /data/wwwroot/default\n    tls justforjoy7@gmail.com\n    log stdout \n    forwardproxy {\n        ports 80 443\n        #basicauth user pass\n        hide_ip\n        hide_via\n    }\n}\n```\n为了掩饰站点，可以在例如/data/wwwroot/default网站目录下放些东西。\n### 5. 通过systemd管理caddy\n```\nsudo systemctl start caddy.service\nsudo systemctl stop caddy.service\nsudo systemctl restart caddy.service\nsudo systemctl reload caddy.service\n```","slug":"使用caddy作为HTTPS服务器","published":1,"updated":"2020-01-28T13:26:36.256Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck5xx0jp800002kudl2y6yecg","content":"<p>用Caddy的插件forwardproxy可以快速搭建HTTPS服务器，可以不用手动配置ssl证书</p>\n<a id=\"more\"></a> \n<h2 id=\"1-安装Caddy和Caddy插件forwardproxy\"><a href=\"#1-安装Caddy和Caddy插件forwardproxy\" class=\"headerlink\" title=\"1. 安装Caddy和Caddy插件forwardproxy\"></a>1. 安装Caddy和Caddy插件forwardproxy</h2><pre><code>curl https://getcaddy.com | bash -s personal http.forwardproxy</code></pre><p>已经安装过Caddy的也可以使用上述命令，升级Caddy（如果有新版本），并安装插件forwardproxy，随后重启Caddy即可。</p>\n<pre><code>service caddy restart\nOR\nsystemctl restart caddy.service</code></pre><h2 id=\"2-配置caddy\"><a href=\"#2-配置caddy\" class=\"headerlink\" title=\"2. 配置caddy\"></a>2. 配置caddy</h2><h3 id=\"1-创建配置文件放到-etc-caddy-目录\"><a href=\"#1-创建配置文件放到-etc-caddy-目录\" class=\"headerlink\" title=\"1. 创建配置文件放到 /etc/caddy 目录\"></a>1. 创建配置文件放到 /etc/caddy 目录</h3><pre><code>sudo mkdir /etc/caddy\nsudo touch /etc/caddy/Caddyfile\nsudo chown -R root:www-data /etc/caddy</code></pre><h3 id=\"2-配置ssl证书目录\"><a href=\"#2-配置ssl证书目录\" class=\"headerlink\" title=\"2. 配置ssl证书目录\"></a>2. 配置ssl证书目录</h3><pre><code>sudo mkdir /etc/ssl/caddy\nsudo chown -R www-data:root /etc/ssl/caddy\nsudo chmod 0770 /etc/ssl/caddy</code></pre><h3 id=\"3-配置-systemd\"><a href=\"#3-配置-systemd\" class=\"headerlink\" title=\"3. 配置 systemd\"></a>3. 配置 systemd</h3><pre><code>sudo curl -s  https://raw.githubusercontent.com/mholt/caddy/master/dist/init/linux-systemd/caddy.service  -o /etc/systemd/system/caddy.service\nsudo systemctl daemon-reload\nsudo systemctl enable caddy.service\nsudo systemctl status caddy.service</code></pre><h3 id=\"4-配置Caddfile配置文件\"><a href=\"#4-配置Caddfile配置文件\" class=\"headerlink\" title=\"4. 配置Caddfile配置文件\"></a>4. 配置Caddfile配置文件</h3><pre><code>域名 {\n    root /data/wwwroot/default\n    tls justforjoy7@gmail.com\n    log stdout \n    forwardproxy {\n        ports 80 443\n        #basicauth user pass\n        hide_ip\n        hide_via\n    }\n}</code></pre><p>为了掩饰站点，可以在例如/data/wwwroot/default网站目录下放些东西。</p>\n<h3 id=\"5-通过systemd管理caddy\"><a href=\"#5-通过systemd管理caddy\" class=\"headerlink\" title=\"5. 通过systemd管理caddy\"></a>5. 通过systemd管理caddy</h3><pre><code>sudo systemctl start caddy.service\nsudo systemctl stop caddy.service\nsudo systemctl restart caddy.service\nsudo systemctl reload caddy.service</code></pre>","site":{"data":{}},"excerpt":"<p>用Caddy的插件forwardproxy可以快速搭建HTTPS服务器，可以不用手动配置ssl证书</p>","more":"<h2 id=\"1-安装Caddy和Caddy插件forwardproxy\"><a href=\"#1-安装Caddy和Caddy插件forwardproxy\" class=\"headerlink\" title=\"1. 安装Caddy和Caddy插件forwardproxy\"></a>1. 安装Caddy和Caddy插件forwardproxy</h2><pre><code>curl https://getcaddy.com | bash -s personal http.forwardproxy</code></pre><p>已经安装过Caddy的也可以使用上述命令，升级Caddy（如果有新版本），并安装插件forwardproxy，随后重启Caddy即可。</p>\n<pre><code>service caddy restart\nOR\nsystemctl restart caddy.service</code></pre><h2 id=\"2-配置caddy\"><a href=\"#2-配置caddy\" class=\"headerlink\" title=\"2. 配置caddy\"></a>2. 配置caddy</h2><h3 id=\"1-创建配置文件放到-etc-caddy-目录\"><a href=\"#1-创建配置文件放到-etc-caddy-目录\" class=\"headerlink\" title=\"1. 创建配置文件放到 /etc/caddy 目录\"></a>1. 创建配置文件放到 /etc/caddy 目录</h3><pre><code>sudo mkdir /etc/caddy\nsudo touch /etc/caddy/Caddyfile\nsudo chown -R root:www-data /etc/caddy</code></pre><h3 id=\"2-配置ssl证书目录\"><a href=\"#2-配置ssl证书目录\" class=\"headerlink\" title=\"2. 配置ssl证书目录\"></a>2. 配置ssl证书目录</h3><pre><code>sudo mkdir /etc/ssl/caddy\nsudo chown -R www-data:root /etc/ssl/caddy\nsudo chmod 0770 /etc/ssl/caddy</code></pre><h3 id=\"3-配置-systemd\"><a href=\"#3-配置-systemd\" class=\"headerlink\" title=\"3. 配置 systemd\"></a>3. 配置 systemd</h3><pre><code>sudo curl -s  https://raw.githubusercontent.com/mholt/caddy/master/dist/init/linux-systemd/caddy.service  -o /etc/systemd/system/caddy.service\nsudo systemctl daemon-reload\nsudo systemctl enable caddy.service\nsudo systemctl status caddy.service</code></pre><h3 id=\"4-配置Caddfile配置文件\"><a href=\"#4-配置Caddfile配置文件\" class=\"headerlink\" title=\"4. 配置Caddfile配置文件\"></a>4. 配置Caddfile配置文件</h3><pre><code>域名 {\n    root /data/wwwroot/default\n    tls justforjoy7@gmail.com\n    log stdout \n    forwardproxy {\n        ports 80 443\n        #basicauth user pass\n        hide_ip\n        hide_via\n    }\n}</code></pre><p>为了掩饰站点，可以在例如/data/wwwroot/default网站目录下放些东西。</p>\n<h3 id=\"5-通过systemd管理caddy\"><a href=\"#5-通过systemd管理caddy\" class=\"headerlink\" title=\"5. 通过systemd管理caddy\"></a>5. 通过systemd管理caddy</h3><pre><code>sudo systemctl start caddy.service\nsudo systemctl stop caddy.service\nsudo systemctl restart caddy.service\nsudo systemctl reload caddy.service</code></pre>"}],"PostAsset":[],"PostCategory":[{"post_id":"ck5xvtii20001vwudv4gya4yw","category_id":"ck5xvtiiw0006vwudzauuhfi5","_id":"ck5xvtijf000ivwudlc8g54w6"},{"post_id":"ck5xvtii70003vwudoembyxd4","category_id":"ck5xvtij10008vwud16uwelt5","_id":"ck5xvtijf000kvwudgkwbd1w4"},{"post_id":"ck5xvtii80004vwudub4nh86v","category_id":"ck5xvtiiw0006vwudzauuhfi5","_id":"ck5xvtijg000mvwudreizqcps"},{"post_id":"ck5xvtii90005vwudhvtf0v3g","category_id":"ck5xvtiiw0006vwudzauuhfi5","_id":"ck5xvtijg000ovwudsb72whmq"},{"post_id":"ck5xx0jp800002kudl2y6yecg","category_id":"ck5xvtiiw0006vwudzauuhfi5","_id":"ck5xx0jq300022kudodiwr5si"}],"PostTag":[{"post_id":"ck5xvtii20001vwudv4gya4yw","tag_id":"ck5xvtiiz0007vwudcuzxnxuf","_id":"ck5xvtijf000hvwudzzm60jqe"},{"post_id":"ck5xvtii20001vwudv4gya4yw","tag_id":"ck5xvtij10009vwudbz25uft5","_id":"ck5xvtijf000jvwudrws0eym3"},{"post_id":"ck5xvtii70003vwudoembyxd4","tag_id":"ck5xvtij2000bvwudoh72pqvr","_id":"ck5xvtijg000lvwuda74wz2sp"},{"post_id":"ck5xvtii80004vwudub4nh86v","tag_id":"ck5xvtiiz0007vwudcuzxnxuf","_id":"ck5xvtijg000nvwudkrl421rk"},{"post_id":"ck5xvtii80004vwudub4nh86v","tag_id":"ck5xvtij10009vwudbz25uft5","_id":"ck5xvtijg000pvwudzguo3yq6"},{"post_id":"ck5xvtii90005vwudhvtf0v3g","tag_id":"ck5xvtiiz0007vwudcuzxnxuf","_id":"ck5xvtijg000qvwud5y59lw6d"},{"post_id":"ck5xvtii90005vwudhvtf0v3g","tag_id":"ck5xvtij7000gvwudeqla7218","_id":"ck5xvtijh000rvwud2mxbgrx5"},{"post_id":"ck5xx0jp800002kudl2y6yecg","tag_id":"ck5xvtiiz0007vwudcuzxnxuf","_id":"ck5xx0jqr00042kudbeb7m662"},{"post_id":"ck5xx0jp800002kudl2y6yecg","tag_id":"ck5xx0jpv00012kudm5zlbx0t","_id":"ck5xx0jqr00052kud069fgev8"},{"post_id":"ck5xx0jp800002kudl2y6yecg","tag_id":"ck5xx0jq300032kudukpxws4l","_id":"ck5xx0jqr00062kudz6v2k9vc"}],"Tag":[{"name":"linux","_id":"ck5xvtiiz0007vwudcuzxnxuf"},{"name":"tomcat","_id":"ck5xvtij10009vwudbz25uft5"},{"name":"hexo","_id":"ck5xvtij2000bvwudoh72pqvr"},{"name":"vsftpd","_id":"ck5xvtij7000gvwudeqla7218"},{"name":"caddy","_id":"ck5xx0jpv00012kudm5zlbx0t"},{"name":"https","_id":"ck5xx0jq300032kudukpxws4l"}]}}